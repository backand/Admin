<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>BackAnd JQuery Plugins - AJAX Filter</title>
    
    <style type="text/css">
        .border{background-color: #f8f8f8;border: 1px solid #ddd;overflow: auto;padding: 6px 10px;border-radius: 3px;}
        body {background-repeat: repeat-x;background-position: left top;background-color:#ebebec;font-family:Helvetica, arial, freesans, clean, sans-serif;}
        .site-width {width:1025px;min-width:975px;position:relative;margin-left:auto;margin-right:auto;}
        .backand-logo {float:left;}
        .navigation {padding-top:22px;height:70px;}
        h5 {line-height:0; margin:0;}
        h3 {margin-bottom:0;}
        ul{list-style:none;}
    </style>
        <script type="text/javascript">

            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-34522413-1']);
            _gaq.push(['_setDomainName', 'backand.com']);
            _gaq.push(['_trackPageview']);

            (function () {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
            })();

    </script>
</head>
<body>
<div class="header site-width">
  <nav>
    <div class="navigation">
      <div class="backand-logo"><a href="/index"><img src="Images/backand-logo.png" alt="BackAnd SQL Database improve phpmyadmin" /></a></div>
     
    </div>
  </nav>
</div>
<div class="main site-width">
<h2>jquery ajax filter</h2>
   <h3>Description</h3>
   <div>
One of the ways to provide filter capability on a grid, is to group all the fields you want to filter above the grid. In addition to that, this plugin provides a UI that enables the user to specify a precise filter.
<br /><br />
The filter is based on the following markup: A div container that contains a collection of items. Each item is marked with a named class by a default "item". Inside the item, there must be a label and an input or a select element. The label must have a named class by a default "label", the input or select element can be inside another container. If they are placed inside another container, this container must have a named class by default "input". If the input or select elements do not have a container, then they should have this class. They must also have a "name" attribute. All the class names are defaults and can be replaced through the plugin options. All these are required because the plugin rebuilds the markup into a table and calculates the number of columns according to the width of the window. Each item can be either a text, a date, a numeric or a dropdown menu. This also must be in the class name of the select or input element or its container if it has one. You can configure the list of filter options with a different option list for text, date or numeric. The plugin has a default filter options for the text, date or numeric types.
</div>

<h3>Dependencies</h3>
<ul>
<li>
<a href="Scripts/jquery.ajax.filter.js">jquery.ajax.filter.js</a>
</li>
<li>
<a href="Content/jquery.ajax.filter.css">jquery.ajax.filter.css</a>
</li>
<li>
<a href="Scripts/jquery.clearsearch-1.0.3.js">jquery.clearsearch-1.0.3.js</a>
</li>
<li>
jquery & jquery ui
</li>
<li><br /><a href="https://github.com/relly/jquery.ajax.filter/">Download all sources from GitHub</a></li>
</ul>

<h3>Demo</h3>
<a href="Demo.htm">backand.com JQuery Plugins - Ajax Filter - Demo</a>

<h3>Usage</h3>
<pre class="border">
    <code>
    // initiate
    $('.filter').ajaxFilter();

    // get json
    $('.filter').ajaxFilter('getJson');
    
    // clear
    $('.filter').ajaxFilter('clear');
    </code>
</pre>

<h3>API</h3>
<h4>Markup example:</h4>
<div class="border">
<xmp>
    <div class="filter">
        <div class="item">
            <span class="label">Company:</span>
            <select class="input dropdown" name="Company">
                <option value=""></option>
                <option value="BMW">BMW</option>
            </select>
        </div>
        <div class="item">
            <span class="label">Year:</span>
            <select class="input dropdown" name="Year">
                <option value=""></option>
                <option value="2013">2013</option>
                <option value="2012">2012</option>
                <option value="2011">2011</option>
            </select>
        </div>
        <div class="item">
            <span class="label">Price:</span>
            <input class="input numeric" type="text" name="Price" />
        </div>
        <div class="item">
            <span class="label">Model:</span>
            <input class="input text" type="text" name="Model" />
        </div>
        <div class="item">
            <span class="label">Exterior:</span>
            <select class="input dropdown" name="Exterior">
                <option value=""></option>
                <option value="Red">Red</option>
                <option value="White">White</option>
                <option value="Black">Black</option>
            </select>
        </div>
        <div class="item">
            <span class="label">Interior:</span>
            <select class="input dropdown" name="Interior">
                <option value=""></option>
                <option value="Red">Red</option>
                <option value="White">White</option>
                <option value="Black">Black</option>
            </select>
        </div>
        <div class="item">
            <span class="label">Transmission:</span>
            <select class="input dropdown" name="Transmission">
                <option value=""></option>
                <option value="Automatic">Automatic</option>
                <option value="Manual">Manual</option>
            </select>
        </div>
        <div class="item">
            <span class="label">Mileage:</span>
            <input class="input numeric" type="text" name="Mileage" />
        </div>
        <div class="item">
            <span class="label">Desctiption:</span>
            <input class="input text" type="text" name="Desctiption" />
        </div>
        <div class="item">
            <span class="label">Published:</span>
            <input class="input date" type="text" name="Published" />
        </div>
    </div>
</xmp>
</div>

<h4>Options:</h4>

<h5>itemSelector</h5>
<ul>
<li>type: string</li>
<li>default: '.item'</li>
<li>description: the jquery selector for the filter's items</li>
</ul>

<h5>inputSelector</h5>
<ul>
<li>type: string</li>
<li>default: '.input'</li>
<li>description: the jquery selector for the item's input element</li>
</ul>

<h5>labelSelector</h5>
<ul>
<li>type: string</li>
<li>default: '.label'</li>
<li>description: the jquery selector for the item's label element</li>
</ul>

<h5>textFilterOptions</h5>
<ul>
<li>type: array of object {text: string, operator: string, prefixWildcard: boolean, postfixWildcard: boolean, hideValues: boolean}</li>
<li>default: Equals, Does Not Equals, Begins With, Ends With, Contains, Does not Contains, Empty, Is not Empty</li>
<li>description: array of object that define the options for textual filter</li>
</ul>

<h5>numericFilterOptions</h5>
<ul>
<li>type: array of object {text: string, operator: string, hideValues: boolean}</li>
<li>default : Equals, Does Not Equals, Greater Than, Greater Than or Equal to, Less Than, Less Than or Equal to, Between, Empty, Is not Empty</li>
<li>description: array of object that define the options for numeric filter</li>
</ul>

<h5>dateFilterOptions</h5>
<ul>
<li>type: array of object {text: string, operator: string, hideValues: boolean}</li>
<li>default: Equals, Does Not Equals, After, After or Equal to, Before, Before or Equal to, Between, Empty, Is not Empty</li>
<li>description: array of object that define the options for date filter</li>
</ul>

<h5>clearInputLinkText</h5>
<ul>
<li>type: string</li>
<li>default: "&times;"</li>
<li>description: this is use to clear a filter input</li>
</ul>

<h5>isValid</h5>
<ul>
<li>type: function(inputType, select, operator, hideValues, first, second, dialog)</li>
<li>return: bool</li>
<li>description: enable to override the isValid function</li>
</ul>

<h4>Methods:</h4>

<h5>getJson</h5>
<ul>
<li>return: string</li>
<li>usage : $('.filter').ajaxFilter('getJson');</li>
<li>description: serialized the filter input to json, array of { _name: string, _operator: string, _parameter: string }</li>
</ul>

<h5>clear</h5>
<ul>
<li>usage : $('.filter').ajaxFilter('clear');</li>
<li>description: reset the input elements</li>
</ul>

<h4>Events:</h4>

<h5>afterResizeCallback(container)</h5>
<ul>
<li>description: triggered after the filter container is resized</li>
</ul>

<h5>inputEnteredCallback(input, inputType, select, first, second)</h5>
<ul>
<li>description: triggered after the user clicks ok on the dialog</li>
</ul>

<h5>dialogOpenedCallback(dialog, input, inputType)</h5>
<ul>
<li>description: triggered after the dialog is opened</li>
</ul>


<h3>Tested with</h3>
<ul>
<li>Chrome</li>
<li>IE 8,9,10</li>
<li>FF</li>
<li>JQuery 1.7.1, JQUery UI 1.8.2</li>
</ul>

<h3>License</h3>
    <a href="LICENSE.TXT">MIT</a>
</div>
</body>
</html>
