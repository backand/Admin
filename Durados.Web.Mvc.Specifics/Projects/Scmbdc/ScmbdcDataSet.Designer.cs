//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Durados.Web.Mvc.Specifics.Projects.Scmbdc {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ScmbdcDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ScmbdcDataSet : global::System.Data.DataSet {
        
        private ASSOCIATEDataTable tableASSOCIATE;
        
        private MBEDataTable tableMBE;
        
        private MBE_GROSS_ANNUAL_SALEDataTable tableMBE_GROSS_ANNUAL_SALE;
        
        private STATE_LISTDataTable tableSTATE_LIST;
        
        private global::System.Data.DataRelation relationFK_MBE_ASSOCIATE;
        
        private global::System.Data.DataRelation relationFK_MBE_GROSS_ANNUAL_SALE_MBE;
        
        private global::System.Data.DataRelation relationSTATE_LIST_ASSOCIATE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScmbdcDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ScmbdcDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ASSOCIATE"] != null)) {
                    base.Tables.Add(new ASSOCIATEDataTable(ds.Tables["ASSOCIATE"]));
                }
                if ((ds.Tables["MBE"] != null)) {
                    base.Tables.Add(new MBEDataTable(ds.Tables["MBE"]));
                }
                if ((ds.Tables["MBE_GROSS_ANNUAL_SALE"] != null)) {
                    base.Tables.Add(new MBE_GROSS_ANNUAL_SALEDataTable(ds.Tables["MBE_GROSS_ANNUAL_SALE"]));
                }
                if ((ds.Tables["STATE_LIST"] != null)) {
                    base.Tables.Add(new STATE_LISTDataTable(ds.Tables["STATE_LIST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ASSOCIATEDataTable ASSOCIATE {
            get {
                return this.tableASSOCIATE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MBEDataTable MBE {
            get {
                return this.tableMBE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MBE_GROSS_ANNUAL_SALEDataTable MBE_GROSS_ANNUAL_SALE {
            get {
                return this.tableMBE_GROSS_ANNUAL_SALE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STATE_LISTDataTable STATE_LIST {
            get {
                return this.tableSTATE_LIST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ScmbdcDataSet cln = ((ScmbdcDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ASSOCIATE"] != null)) {
                    base.Tables.Add(new ASSOCIATEDataTable(ds.Tables["ASSOCIATE"]));
                }
                if ((ds.Tables["MBE"] != null)) {
                    base.Tables.Add(new MBEDataTable(ds.Tables["MBE"]));
                }
                if ((ds.Tables["MBE_GROSS_ANNUAL_SALE"] != null)) {
                    base.Tables.Add(new MBE_GROSS_ANNUAL_SALEDataTable(ds.Tables["MBE_GROSS_ANNUAL_SALE"]));
                }
                if ((ds.Tables["STATE_LIST"] != null)) {
                    base.Tables.Add(new STATE_LISTDataTable(ds.Tables["STATE_LIST"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableASSOCIATE = ((ASSOCIATEDataTable)(base.Tables["ASSOCIATE"]));
            if ((initTable == true)) {
                if ((this.tableASSOCIATE != null)) {
                    this.tableASSOCIATE.InitVars();
                }
            }
            this.tableMBE = ((MBEDataTable)(base.Tables["MBE"]));
            if ((initTable == true)) {
                if ((this.tableMBE != null)) {
                    this.tableMBE.InitVars();
                }
            }
            this.tableMBE_GROSS_ANNUAL_SALE = ((MBE_GROSS_ANNUAL_SALEDataTable)(base.Tables["MBE_GROSS_ANNUAL_SALE"]));
            if ((initTable == true)) {
                if ((this.tableMBE_GROSS_ANNUAL_SALE != null)) {
                    this.tableMBE_GROSS_ANNUAL_SALE.InitVars();
                }
            }
            this.tableSTATE_LIST = ((STATE_LISTDataTable)(base.Tables["STATE_LIST"]));
            if ((initTable == true)) {
                if ((this.tableSTATE_LIST != null)) {
                    this.tableSTATE_LIST.InitVars();
                }
            }
            this.relationFK_MBE_ASSOCIATE = this.Relations["FK_MBE_ASSOCIATE"];
            this.relationFK_MBE_GROSS_ANNUAL_SALE_MBE = this.Relations["FK_MBE_GROSS_ANNUAL_SALE_MBE"];
            this.relationSTATE_LIST_ASSOCIATE = this.Relations["STATE_LIST_ASSOCIATE"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ScmbdcDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ScmbdcDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableASSOCIATE = new ASSOCIATEDataTable();
            base.Tables.Add(this.tableASSOCIATE);
            this.tableMBE = new MBEDataTable();
            base.Tables.Add(this.tableMBE);
            this.tableMBE_GROSS_ANNUAL_SALE = new MBE_GROSS_ANNUAL_SALEDataTable();
            base.Tables.Add(this.tableMBE_GROSS_ANNUAL_SALE);
            this.tableSTATE_LIST = new STATE_LISTDataTable();
            base.Tables.Add(this.tableSTATE_LIST);
            this.relationFK_MBE_ASSOCIATE = new global::System.Data.DataRelation("FK_MBE_ASSOCIATE", new global::System.Data.DataColumn[] {
                        this.tableASSOCIATE.assc_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMBE.assc_IDColumn}, false);
            this.Relations.Add(this.relationFK_MBE_ASSOCIATE);
            this.relationFK_MBE_GROSS_ANNUAL_SALE_MBE = new global::System.Data.DataRelation("FK_MBE_GROSS_ANNUAL_SALE_MBE", new global::System.Data.DataColumn[] {
                        this.tableMBE.assc_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableMBE_GROSS_ANNUAL_SALE.assc_IDColumn}, false);
            this.Relations.Add(this.relationFK_MBE_GROSS_ANNUAL_SALE_MBE);
            this.relationSTATE_LIST_ASSOCIATE = new global::System.Data.DataRelation("STATE_LIST_ASSOCIATE", new global::System.Data.DataColumn[] {
                        this.tableSTATE_LIST.CodeColumn}, new global::System.Data.DataColumn[] {
                        this.tableASSOCIATE.assc_stateColumn}, false);
            this.Relations.Add(this.relationSTATE_LIST_ASSOCIATE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeASSOCIATE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMBE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMBE_GROSS_ANNUAL_SALE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTATE_LIST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ScmbdcDataSet ds = new ScmbdcDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ASSOCIATERowChangeEventHandler(object sender, ASSOCIATERowChangeEvent e);
        
        public delegate void MBERowChangeEventHandler(object sender, MBERowChangeEvent e);
        
        public delegate void MBE_GROSS_ANNUAL_SALERowChangeEventHandler(object sender, MBE_GROSS_ANNUAL_SALERowChangeEvent e);
        
        public delegate void STATE_LISTRowChangeEventHandler(object sender, STATE_LISTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ASSOCIATEDataTable : global::System.Data.TypedTableBase<ASSOCIATERow> {
            
            private global::System.Data.DataColumn columnassc_ID;
            
            private global::System.Data.DataColumn columnassc_business_name;
            
            private global::System.Data.DataColumn columnkey_contact_title;
            
            private global::System.Data.DataColumn columnkey_contact_Fname;
            
            private global::System.Data.DataColumn columnkey_contact_Lname;
            
            private global::System.Data.DataColumn columnassc_address1;
            
            private global::System.Data.DataColumn columnassc_address2;
            
            private global::System.Data.DataColumn columnassc_city;
            
            private global::System.Data.DataColumn columnassc_state;
            
            private global::System.Data.DataColumn columnassc_zipcode;
            
            private global::System.Data.DataColumn columnassc_phone;
            
            private global::System.Data.DataColumn columnassc_fax_num;
            
            private global::System.Data.DataColumn columnassc_email;
            
            private global::System.Data.DataColumn columnassc_website;
            
            private global::System.Data.DataColumn columnassc_mail_address1;
            
            private global::System.Data.DataColumn columnassc_mail_address2;
            
            private global::System.Data.DataColumn columnassc_mail_city;
            
            private global::System.Data.DataColumn columnassc_mail_state;
            
            private global::System.Data.DataColumn columnassc_mail_zipcode;
            
            private global::System.Data.DataColumn columnassc_payment_type;
            
            private global::System.Data.DataColumn columnassc_pdf_filename;
            
            private global::System.Data.DataColumn columnassc_date;
            
            private global::System.Data.DataColumn columnassc_status;
            
            private global::System.Data.DataColumn columnassc_fee_amt;
            
            private global::System.Data.DataColumn columnassc_fee_status;
            
            private global::System.Data.DataColumn columnassc_type;
            
            private global::System.Data.DataColumn columnLastModificationTime;
            
            private global::System.Data.DataColumn columnEntryID;
            
            private global::System.Data.DataColumn columninsurance_inquiry;
            
            private global::System.Data.DataColumn columninsurance_CA_employees;
            
            private global::System.Data.DataColumn columnassc_other_phone;
            
            private global::System.Data.DataColumn columnemail_status;
            
            private global::System.Data.DataColumn columnemail_country;
            
            private global::System.Data.DataColumn columnemail_LastAttempt;
            
            private global::System.Data.DataColumn columnemail_LastResponse;
            
            private global::System.Data.DataColumn columnemail_VerificationResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATEDataTable() {
                this.TableName = "ASSOCIATE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASSOCIATEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ASSOCIATEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_IDColumn {
                get {
                    return this.columnassc_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_business_nameColumn {
                get {
                    return this.columnassc_business_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn key_contact_titleColumn {
                get {
                    return this.columnkey_contact_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn key_contact_FnameColumn {
                get {
                    return this.columnkey_contact_Fname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn key_contact_LnameColumn {
                get {
                    return this.columnkey_contact_Lname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_address1Column {
                get {
                    return this.columnassc_address1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_address2Column {
                get {
                    return this.columnassc_address2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_cityColumn {
                get {
                    return this.columnassc_city;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_stateColumn {
                get {
                    return this.columnassc_state;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_zipcodeColumn {
                get {
                    return this.columnassc_zipcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_phoneColumn {
                get {
                    return this.columnassc_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_fax_numColumn {
                get {
                    return this.columnassc_fax_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_emailColumn {
                get {
                    return this.columnassc_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_websiteColumn {
                get {
                    return this.columnassc_website;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_mail_address1Column {
                get {
                    return this.columnassc_mail_address1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_mail_address2Column {
                get {
                    return this.columnassc_mail_address2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_mail_cityColumn {
                get {
                    return this.columnassc_mail_city;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_mail_stateColumn {
                get {
                    return this.columnassc_mail_state;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_mail_zipcodeColumn {
                get {
                    return this.columnassc_mail_zipcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_payment_typeColumn {
                get {
                    return this.columnassc_payment_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_pdf_filenameColumn {
                get {
                    return this.columnassc_pdf_filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_dateColumn {
                get {
                    return this.columnassc_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_statusColumn {
                get {
                    return this.columnassc_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_fee_amtColumn {
                get {
                    return this.columnassc_fee_amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_fee_statusColumn {
                get {
                    return this.columnassc_fee_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_typeColumn {
                get {
                    return this.columnassc_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastModificationTimeColumn {
                get {
                    return this.columnLastModificationTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryIDColumn {
                get {
                    return this.columnEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn insurance_inquiryColumn {
                get {
                    return this.columninsurance_inquiry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn insurance_CA_employeesColumn {
                get {
                    return this.columninsurance_CA_employees;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_other_phoneColumn {
                get {
                    return this.columnassc_other_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn email_statusColumn {
                get {
                    return this.columnemail_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn email_countryColumn {
                get {
                    return this.columnemail_country;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn email_LastAttemptColumn {
                get {
                    return this.columnemail_LastAttempt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn email_LastResponseColumn {
                get {
                    return this.columnemail_LastResponse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn email_VerificationResultColumn {
                get {
                    return this.columnemail_VerificationResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow this[int index] {
                get {
                    return ((ASSOCIATERow)(this.Rows[index]));
                }
            }
            
            public event ASSOCIATERowChangeEventHandler ASSOCIATERowChanging;
            
            public event ASSOCIATERowChangeEventHandler ASSOCIATERowChanged;
            
            public event ASSOCIATERowChangeEventHandler ASSOCIATERowDeleting;
            
            public event ASSOCIATERowChangeEventHandler ASSOCIATERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddASSOCIATERow(ASSOCIATERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow AddASSOCIATERow(
                        int assc_ID, 
                        string assc_business_name, 
                        string key_contact_title, 
                        string key_contact_Fname, 
                        string key_contact_Lname, 
                        string assc_address1, 
                        string assc_address2, 
                        string assc_city, 
                        STATE_LISTRow parentSTATE_LISTRowBySTATE_LIST_ASSOCIATE, 
                        string assc_zipcode, 
                        string assc_phone, 
                        string assc_fax_num, 
                        string assc_email, 
                        string assc_website, 
                        string assc_mail_address1, 
                        string assc_mail_address2, 
                        string assc_mail_city, 
                        string assc_mail_state, 
                        string assc_mail_zipcode, 
                        string assc_payment_type, 
                        string assc_pdf_filename, 
                        System.DateTime assc_date, 
                        string assc_status, 
                        decimal assc_fee_amt, 
                        string assc_fee_status, 
                        string assc_type, 
                        System.DateTime LastModificationTime, 
                        string EntryID, 
                        bool insurance_inquiry, 
                        int insurance_CA_employees, 
                        string assc_other_phone, 
                        int email_status, 
                        string email_country, 
                        System.DateTime email_LastAttempt, 
                        string email_LastResponse, 
                        string email_VerificationResult) {
                ASSOCIATERow rowASSOCIATERow = ((ASSOCIATERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        assc_ID,
                        assc_business_name,
                        key_contact_title,
                        key_contact_Fname,
                        key_contact_Lname,
                        assc_address1,
                        assc_address2,
                        assc_city,
                        null,
                        assc_zipcode,
                        assc_phone,
                        assc_fax_num,
                        assc_email,
                        assc_website,
                        assc_mail_address1,
                        assc_mail_address2,
                        assc_mail_city,
                        assc_mail_state,
                        assc_mail_zipcode,
                        assc_payment_type,
                        assc_pdf_filename,
                        assc_date,
                        assc_status,
                        assc_fee_amt,
                        assc_fee_status,
                        assc_type,
                        LastModificationTime,
                        EntryID,
                        insurance_inquiry,
                        insurance_CA_employees,
                        assc_other_phone,
                        email_status,
                        email_country,
                        email_LastAttempt,
                        email_LastResponse,
                        email_VerificationResult};
                if ((parentSTATE_LISTRowBySTATE_LIST_ASSOCIATE != null)) {
                    columnValuesArray[8] = parentSTATE_LISTRowBySTATE_LIST_ASSOCIATE[0];
                }
                rowASSOCIATERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowASSOCIATERow);
                return rowASSOCIATERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow FindByassc_ID(int assc_ID) {
                return ((ASSOCIATERow)(this.Rows.Find(new object[] {
                            assc_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ASSOCIATEDataTable cln = ((ASSOCIATEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ASSOCIATEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnassc_ID = base.Columns["assc_ID"];
                this.columnassc_business_name = base.Columns["assc_business_name"];
                this.columnkey_contact_title = base.Columns["key_contact_title"];
                this.columnkey_contact_Fname = base.Columns["key_contact_Fname"];
                this.columnkey_contact_Lname = base.Columns["key_contact_Lname"];
                this.columnassc_address1 = base.Columns["assc_address1"];
                this.columnassc_address2 = base.Columns["assc_address2"];
                this.columnassc_city = base.Columns["assc_city"];
                this.columnassc_state = base.Columns["assc_state"];
                this.columnassc_zipcode = base.Columns["assc_zipcode"];
                this.columnassc_phone = base.Columns["assc_phone"];
                this.columnassc_fax_num = base.Columns["assc_fax_num"];
                this.columnassc_email = base.Columns["assc_email"];
                this.columnassc_website = base.Columns["assc_website"];
                this.columnassc_mail_address1 = base.Columns["assc_mail_address1"];
                this.columnassc_mail_address2 = base.Columns["assc_mail_address2"];
                this.columnassc_mail_city = base.Columns["assc_mail_city"];
                this.columnassc_mail_state = base.Columns["assc_mail_state"];
                this.columnassc_mail_zipcode = base.Columns["assc_mail_zipcode"];
                this.columnassc_payment_type = base.Columns["assc_payment_type"];
                this.columnassc_pdf_filename = base.Columns["assc_pdf_filename"];
                this.columnassc_date = base.Columns["assc_date"];
                this.columnassc_status = base.Columns["assc_status"];
                this.columnassc_fee_amt = base.Columns["assc_fee_amt"];
                this.columnassc_fee_status = base.Columns["assc_fee_status"];
                this.columnassc_type = base.Columns["assc_type"];
                this.columnLastModificationTime = base.Columns["LastModificationTime"];
                this.columnEntryID = base.Columns["EntryID"];
                this.columninsurance_inquiry = base.Columns["insurance_inquiry"];
                this.columninsurance_CA_employees = base.Columns["insurance_CA_employees"];
                this.columnassc_other_phone = base.Columns["assc_other_phone"];
                this.columnemail_status = base.Columns["email_status"];
                this.columnemail_country = base.Columns["email_country"];
                this.columnemail_LastAttempt = base.Columns["email_LastAttempt"];
                this.columnemail_LastResponse = base.Columns["email_LastResponse"];
                this.columnemail_VerificationResult = base.Columns["email_VerificationResult"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnassc_ID = new global::System.Data.DataColumn("assc_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_ID);
                this.columnassc_business_name = new global::System.Data.DataColumn("assc_business_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_business_name);
                this.columnkey_contact_title = new global::System.Data.DataColumn("key_contact_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey_contact_title);
                this.columnkey_contact_Fname = new global::System.Data.DataColumn("key_contact_Fname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey_contact_Fname);
                this.columnkey_contact_Lname = new global::System.Data.DataColumn("key_contact_Lname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkey_contact_Lname);
                this.columnassc_address1 = new global::System.Data.DataColumn("assc_address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_address1);
                this.columnassc_address2 = new global::System.Data.DataColumn("assc_address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_address2);
                this.columnassc_city = new global::System.Data.DataColumn("assc_city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_city);
                this.columnassc_state = new global::System.Data.DataColumn("assc_state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_state);
                this.columnassc_zipcode = new global::System.Data.DataColumn("assc_zipcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_zipcode);
                this.columnassc_phone = new global::System.Data.DataColumn("assc_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_phone);
                this.columnassc_fax_num = new global::System.Data.DataColumn("assc_fax_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_fax_num);
                this.columnassc_email = new global::System.Data.DataColumn("assc_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_email);
                this.columnassc_website = new global::System.Data.DataColumn("assc_website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_website);
                this.columnassc_mail_address1 = new global::System.Data.DataColumn("assc_mail_address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_mail_address1);
                this.columnassc_mail_address2 = new global::System.Data.DataColumn("assc_mail_address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_mail_address2);
                this.columnassc_mail_city = new global::System.Data.DataColumn("assc_mail_city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_mail_city);
                this.columnassc_mail_state = new global::System.Data.DataColumn("assc_mail_state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_mail_state);
                this.columnassc_mail_zipcode = new global::System.Data.DataColumn("assc_mail_zipcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_mail_zipcode);
                this.columnassc_payment_type = new global::System.Data.DataColumn("assc_payment_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_payment_type);
                this.columnassc_pdf_filename = new global::System.Data.DataColumn("assc_pdf_filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_pdf_filename);
                this.columnassc_date = new global::System.Data.DataColumn("assc_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_date);
                this.columnassc_status = new global::System.Data.DataColumn("assc_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_status);
                this.columnassc_fee_amt = new global::System.Data.DataColumn("assc_fee_amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_fee_amt);
                this.columnassc_fee_status = new global::System.Data.DataColumn("assc_fee_status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_fee_status);
                this.columnassc_type = new global::System.Data.DataColumn("assc_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_type);
                this.columnLastModificationTime = new global::System.Data.DataColumn("LastModificationTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastModificationTime);
                this.columnEntryID = new global::System.Data.DataColumn("EntryID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryID);
                this.columninsurance_inquiry = new global::System.Data.DataColumn("insurance_inquiry", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsurance_inquiry);
                this.columninsurance_CA_employees = new global::System.Data.DataColumn("insurance_CA_employees", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsurance_CA_employees);
                this.columnassc_other_phone = new global::System.Data.DataColumn("assc_other_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_other_phone);
                this.columnemail_status = new global::System.Data.DataColumn("email_status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_status);
                this.columnemail_country = new global::System.Data.DataColumn("email_country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_country);
                this.columnemail_LastAttempt = new global::System.Data.DataColumn("email_LastAttempt", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_LastAttempt);
                this.columnemail_LastResponse = new global::System.Data.DataColumn("email_LastResponse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_LastResponse);
                this.columnemail_VerificationResult = new global::System.Data.DataColumn("email_VerificationResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_VerificationResult);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnassc_ID}, true));
                this.columnassc_ID.AllowDBNull = false;
                this.columnassc_ID.Unique = true;
                this.columnassc_business_name.MaxLength = 60;
                this.columnkey_contact_title.MaxLength = 100;
                this.columnkey_contact_Fname.MaxLength = 50;
                this.columnkey_contact_Lname.MaxLength = 50;
                this.columnassc_address1.MaxLength = 50;
                this.columnassc_address2.MaxLength = 50;
                this.columnassc_city.MaxLength = 30;
                this.columnassc_state.MaxLength = 2;
                this.columnassc_zipcode.MaxLength = 10;
                this.columnassc_phone.MaxLength = 20;
                this.columnassc_fax_num.MaxLength = 20;
                this.columnassc_email.MaxLength = 50;
                this.columnassc_website.MaxLength = 70;
                this.columnassc_mail_address1.MaxLength = 50;
                this.columnassc_mail_address2.MaxLength = 50;
                this.columnassc_mail_city.MaxLength = 30;
                this.columnassc_mail_state.MaxLength = 2;
                this.columnassc_mail_zipcode.MaxLength = 10;
                this.columnassc_payment_type.MaxLength = 20;
                this.columnassc_pdf_filename.MaxLength = 50;
                this.columnassc_status.MaxLength = 20;
                this.columnassc_fee_status.MaxLength = 4;
                this.columnassc_type.MaxLength = 4;
                this.columnEntryID.MaxLength = 50;
                this.columnassc_other_phone.MaxLength = 20;
                this.columnemail_country.MaxLength = 100;
                this.columnemail_LastResponse.MaxLength = 255;
                this.columnemail_VerificationResult.MaxLength = 7;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow NewASSOCIATERow() {
                return ((ASSOCIATERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ASSOCIATERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ASSOCIATERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ASSOCIATERowChanged != null)) {
                    this.ASSOCIATERowChanged(this, new ASSOCIATERowChangeEvent(((ASSOCIATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ASSOCIATERowChanging != null)) {
                    this.ASSOCIATERowChanging(this, new ASSOCIATERowChangeEvent(((ASSOCIATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ASSOCIATERowDeleted != null)) {
                    this.ASSOCIATERowDeleted(this, new ASSOCIATERowChangeEvent(((ASSOCIATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ASSOCIATERowDeleting != null)) {
                    this.ASSOCIATERowDeleting(this, new ASSOCIATERowChangeEvent(((ASSOCIATERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveASSOCIATERow(ASSOCIATERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScmbdcDataSet ds = new ScmbdcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ASSOCIATEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MBEDataTable : global::System.Data.TypedTableBase<MBERow> {
            
            private global::System.Data.DataColumn columnassc_ID;
            
            private global::System.Data.DataColumn columnmbe_cert_num;
            
            private global::System.Data.DataColumn columncouncil_ID_num;
            
            private global::System.Data.DataColumn columnmbe_business_type;
            
            private global::System.Data.DataColumn columnmbe_business_product_service;
            
            private global::System.Data.DataColumn columnmbe_other_cert;
            
            private global::System.Data.DataColumn columnmbe_federal_IRS_num;
            
            private global::System.Data.DataColumn columnmbe_business_establish_date;
            
            private global::System.Data.DataColumn columnmbe_date_certified;
            
            private global::System.Data.DataColumn columniso9000_cert;
            
            private global::System.Data.DataColumn columnmbe_parent_company;
            
            private global::System.Data.DataColumn columnmbe_recert_date1;
            
            private global::System.Data.DataColumn columnmbe_recert_date2;
            
            private global::System.Data.DataColumn columnmbe_recert_date3;
            
            private global::System.Data.DataColumn columnmbe_recert_date4;
            
            private global::System.Data.DataColumn columnmbe_minority_emp_count;
            
            private global::System.Data.DataColumn columnmbe_gross_annual_sale;
            
            private global::System.Data.DataColumn columnmbe_geographical_mrkt;
            
            private global::System.Data.DataColumn columnmbe_HUB_zone;
            
            private global::System.Data.DataColumn columnRMSDC_code;
            
            private global::System.Data.DataColumn columnmbe_legal_structure;
            
            private global::System.Data.DataColumn columnmbe_owner_salutation;
            
            private global::System.Data.DataColumn columnmajor_customer;
            
            private global::System.Data.DataColumn columnmbe_owner_title;
            
            private global::System.Data.DataColumn columnowner_Lname;
            
            private global::System.Data.DataColumn columnowner_Fname;
            
            private global::System.Data.DataColumn columnmbe_other_contact_name;
            
            private global::System.Data.DataColumn columnmbe_other_contact_title;
            
            private global::System.Data.DataColumn columnmbe_8a_cert;
            
            private global::System.Data.DataColumn columnmbe_employee_count;
            
            private global::System.Data.DataColumn columnsubsidiary;
            
            private global::System.Data.DataColumn columnownership_change;
            
            private global::System.Data.DataColumn columnfull_time_emp_count;
            
            private global::System.Data.DataColumn columnpending_lawsuit;
            
            private global::System.Data.DataColumn columncert_rejection_test;
            
            private global::System.Data.DataColumn columnbankruptcy;
            
            private global::System.Data.DataColumn columnsubsidiary_test;
            
            private global::System.Data.DataColumn columnmember_history;
            
            private global::System.Data.DataColumn columnmbe_DB_num;
            
            private global::System.Data.DataColumn columnpart_time_emp_count;
            
            private global::System.Data.DataColumn columncert_rejection_reason;
            
            private global::System.Data.DataColumn columnmethod_of_acquisition;
            
            private global::System.Data.DataColumn columncheck_num;
            
            private global::System.Data.DataColumn columnmbe_home_base_business;
            
            private global::System.Data.DataColumn columnmbe_8a_cert_num;
            
            private global::System.Data.DataColumn columnsinking_fund_num;
            
            private global::System.Data.DataColumn columnmbe_email_subscription;
            
            private global::System.Data.DataColumn columniso9001_cert;
            
            private global::System.Data.DataColumn columncouncil;
            
            private global::System.Data.DataColumn columnlocal_regional_council;
            
            private global::System.Data.DataColumn columniso9002_cert;
            
            private global::System.Data.DataColumn columncontract_termination_date;
            
            private global::System.Data.DataColumn columnmbe_employer_SSN;
            
            private global::System.Data.DataColumn columnminority_memo;
            
            private global::System.Data.DataColumn columndate_acquisition;
            
            private global::System.Data.DataColumn columnmbe_additional_facility;
            
            private global::System.Data.DataColumn columnminority_class;
            
            private global::System.Data.DataColumn columnmbe_cert_expiration_date;
            
            private global::System.Data.DataColumn columnmbe_MBEIC_inv;
            
            private global::System.Data.DataColumn columnmbe_other_contact_email;
            
            private global::System.Data.DataColumn columnotherNMSDCCert;
            
            private global::System.Data.DataColumn columnotherNMSDCCertCouncil;
            
            private global::System.Data.DataColumn columnotherNMSDCCertDate;
            
            private global::System.Data.DataColumn columndenyCert;
            
            private global::System.Data.DataColumn columndenyCertCouncil;
            
            private global::System.Data.DataColumn columndenyCertDate;
            
            private global::System.Data.DataColumn columngovtClear;
            
            private global::System.Data.DataColumn columnclearLevel;
            
            private global::System.Data.DataColumn columnunionAffiliation;
            
            private global::System.Data.DataColumn columnbonding;
            
            private global::System.Data.DataColumn columnbondingAmount;
            
            private global::System.Data.DataColumn columnbondingCompany;
            
            private global::System.Data.DataColumn columnsharedResources;
            
            private global::System.Data.DataColumn columnsharedResourcesDesc;
            
            private global::System.Data.DataColumn columnotherCompany;
            
            private global::System.Data.DataColumn columnotherCompanyDesc;
            
            private global::System.Data.DataColumn columnpremisesStatus;
            
            private global::System.Data.DataColumn columnotherAgreements;
            
            private global::System.Data.DataColumn columnpending_lawsuit_details;
            
            private global::System.Data.DataColumn columnbankruptcyDetails;
            
            private global::System.Data.DataColumn columnhistory;
            
            private global::System.Data.DataColumn columnmarketingChannel;
            
            private global::System.Data.DataColumn columnavgDollarValueInv;
            
            private global::System.Data.DataColumn columncorporatePlus;
            
            private global::System.Data.DataColumn columnpword;
            
            private global::System.Data.DataColumn columnlastDeterminationDate;
            
            private global::System.Data.DataColumn columncorpPlusSponsor;
            
            private global::System.Data.DataColumn columncustomerNatContracts;
            
            private global::System.Data.DataColumn columnphoneExtension;
            
            private global::System.Data.DataColumn columnremarks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBEDataTable() {
                this.TableName = "MBE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MBEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MBEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_IDColumn {
                get {
                    return this.columnassc_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_cert_numColumn {
                get {
                    return this.columnmbe_cert_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn council_ID_numColumn {
                get {
                    return this.columncouncil_ID_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_business_typeColumn {
                get {
                    return this.columnmbe_business_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_business_product_serviceColumn {
                get {
                    return this.columnmbe_business_product_service;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_other_certColumn {
                get {
                    return this.columnmbe_other_cert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_federal_IRS_numColumn {
                get {
                    return this.columnmbe_federal_IRS_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_business_establish_dateColumn {
                get {
                    return this.columnmbe_business_establish_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_date_certifiedColumn {
                get {
                    return this.columnmbe_date_certified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iso9000_certColumn {
                get {
                    return this.columniso9000_cert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_parent_companyColumn {
                get {
                    return this.columnmbe_parent_company;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_recert_date1Column {
                get {
                    return this.columnmbe_recert_date1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_recert_date2Column {
                get {
                    return this.columnmbe_recert_date2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_recert_date3Column {
                get {
                    return this.columnmbe_recert_date3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_recert_date4Column {
                get {
                    return this.columnmbe_recert_date4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_minority_emp_countColumn {
                get {
                    return this.columnmbe_minority_emp_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_gross_annual_saleColumn {
                get {
                    return this.columnmbe_gross_annual_sale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_geographical_mrktColumn {
                get {
                    return this.columnmbe_geographical_mrkt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_HUB_zoneColumn {
                get {
                    return this.columnmbe_HUB_zone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMSDC_codeColumn {
                get {
                    return this.columnRMSDC_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_legal_structureColumn {
                get {
                    return this.columnmbe_legal_structure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_owner_salutationColumn {
                get {
                    return this.columnmbe_owner_salutation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn major_customerColumn {
                get {
                    return this.columnmajor_customer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_owner_titleColumn {
                get {
                    return this.columnmbe_owner_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn owner_LnameColumn {
                get {
                    return this.columnowner_Lname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn owner_FnameColumn {
                get {
                    return this.columnowner_Fname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_other_contact_nameColumn {
                get {
                    return this.columnmbe_other_contact_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_other_contact_titleColumn {
                get {
                    return this.columnmbe_other_contact_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_8a_certColumn {
                get {
                    return this.columnmbe_8a_cert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_employee_countColumn {
                get {
                    return this.columnmbe_employee_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subsidiaryColumn {
                get {
                    return this.columnsubsidiary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ownership_changeColumn {
                get {
                    return this.columnownership_change;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn full_time_emp_countColumn {
                get {
                    return this.columnfull_time_emp_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pending_lawsuitColumn {
                get {
                    return this.columnpending_lawsuit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cert_rejection_testColumn {
                get {
                    return this.columncert_rejection_test;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankruptcyColumn {
                get {
                    return this.columnbankruptcy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subsidiary_testColumn {
                get {
                    return this.columnsubsidiary_test;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn member_historyColumn {
                get {
                    return this.columnmember_history;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_DB_numColumn {
                get {
                    return this.columnmbe_DB_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn part_time_emp_countColumn {
                get {
                    return this.columnpart_time_emp_count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cert_rejection_reasonColumn {
                get {
                    return this.columncert_rejection_reason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn method_of_acquisitionColumn {
                get {
                    return this.columnmethod_of_acquisition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn check_numColumn {
                get {
                    return this.columncheck_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_home_base_businessColumn {
                get {
                    return this.columnmbe_home_base_business;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_8a_cert_numColumn {
                get {
                    return this.columnmbe_8a_cert_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sinking_fund_numColumn {
                get {
                    return this.columnsinking_fund_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_email_subscriptionColumn {
                get {
                    return this.columnmbe_email_subscription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iso9001_certColumn {
                get {
                    return this.columniso9001_cert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn councilColumn {
                get {
                    return this.columncouncil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn local_regional_councilColumn {
                get {
                    return this.columnlocal_regional_council;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iso9002_certColumn {
                get {
                    return this.columniso9002_cert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contract_termination_dateColumn {
                get {
                    return this.columncontract_termination_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_employer_SSNColumn {
                get {
                    return this.columnmbe_employer_SSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minority_memoColumn {
                get {
                    return this.columnminority_memo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_acquisitionColumn {
                get {
                    return this.columndate_acquisition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_additional_facilityColumn {
                get {
                    return this.columnmbe_additional_facility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn minority_classColumn {
                get {
                    return this.columnminority_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_cert_expiration_dateColumn {
                get {
                    return this.columnmbe_cert_expiration_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_MBEIC_invColumn {
                get {
                    return this.columnmbe_MBEIC_inv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mbe_other_contact_emailColumn {
                get {
                    return this.columnmbe_other_contact_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherNMSDCCertColumn {
                get {
                    return this.columnotherNMSDCCert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherNMSDCCertCouncilColumn {
                get {
                    return this.columnotherNMSDCCertCouncil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherNMSDCCertDateColumn {
                get {
                    return this.columnotherNMSDCCertDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn denyCertColumn {
                get {
                    return this.columndenyCert;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn denyCertCouncilColumn {
                get {
                    return this.columndenyCertCouncil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn denyCertDateColumn {
                get {
                    return this.columndenyCertDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn govtClearColumn {
                get {
                    return this.columngovtClear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clearLevelColumn {
                get {
                    return this.columnclearLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unionAffiliationColumn {
                get {
                    return this.columnunionAffiliation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bondingColumn {
                get {
                    return this.columnbonding;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bondingAmountColumn {
                get {
                    return this.columnbondingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bondingCompanyColumn {
                get {
                    return this.columnbondingCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sharedResourcesColumn {
                get {
                    return this.columnsharedResources;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sharedResourcesDescColumn {
                get {
                    return this.columnsharedResourcesDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherCompanyColumn {
                get {
                    return this.columnotherCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherCompanyDescColumn {
                get {
                    return this.columnotherCompanyDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn premisesStatusColumn {
                get {
                    return this.columnpremisesStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn otherAgreementsColumn {
                get {
                    return this.columnotherAgreements;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pending_lawsuit_detailsColumn {
                get {
                    return this.columnpending_lawsuit_details;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bankruptcyDetailsColumn {
                get {
                    return this.columnbankruptcyDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn historyColumn {
                get {
                    return this.columnhistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn marketingChannelColumn {
                get {
                    return this.columnmarketingChannel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn avgDollarValueInvColumn {
                get {
                    return this.columnavgDollarValueInv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn corporatePlusColumn {
                get {
                    return this.columncorporatePlus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pwordColumn {
                get {
                    return this.columnpword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lastDeterminationDateColumn {
                get {
                    return this.columnlastDeterminationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn corpPlusSponsorColumn {
                get {
                    return this.columncorpPlusSponsor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customerNatContractsColumn {
                get {
                    return this.columncustomerNatContracts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneExtensionColumn {
                get {
                    return this.columnphoneExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarksColumn {
                get {
                    return this.columnremarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow this[int index] {
                get {
                    return ((MBERow)(this.Rows[index]));
                }
            }
            
            public event MBERowChangeEventHandler MBERowChanging;
            
            public event MBERowChangeEventHandler MBERowChanged;
            
            public event MBERowChangeEventHandler MBERowDeleting;
            
            public event MBERowChangeEventHandler MBERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMBERow(MBERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow AddMBERow(
                        ASSOCIATERow parentASSOCIATERowByFK_MBE_ASSOCIATE, 
                        string mbe_cert_num, 
                        string council_ID_num, 
                        string mbe_business_type, 
                        string mbe_business_product_service, 
                        string mbe_other_cert, 
                        string mbe_federal_IRS_num, 
                        System.DateTime mbe_business_establish_date, 
                        System.DateTime mbe_date_certified, 
                        bool iso9000_cert, 
                        string mbe_parent_company, 
                        System.DateTime mbe_recert_date1, 
                        System.DateTime mbe_recert_date2, 
                        System.DateTime mbe_recert_date3, 
                        System.DateTime mbe_recert_date4, 
                        int mbe_minority_emp_count, 
                        decimal mbe_gross_annual_sale, 
                        string mbe_geographical_mrkt, 
                        bool mbe_HUB_zone, 
                        string RMSDC_code, 
                        string mbe_legal_structure, 
                        string mbe_owner_salutation, 
                        string major_customer, 
                        string mbe_owner_title, 
                        string owner_Lname, 
                        string owner_Fname, 
                        string mbe_other_contact_name, 
                        string mbe_other_contact_title, 
                        bool mbe_8a_cert, 
                        int mbe_employee_count, 
                        string subsidiary, 
                        bool ownership_change, 
                        int full_time_emp_count, 
                        bool pending_lawsuit, 
                        bool cert_rejection_test, 
                        bool bankruptcy, 
                        bool subsidiary_test, 
                        string member_history, 
                        string mbe_DB_num, 
                        int part_time_emp_count, 
                        string cert_rejection_reason, 
                        string method_of_acquisition, 
                        int check_num, 
                        bool mbe_home_base_business, 
                        string mbe_8a_cert_num, 
                        int sinking_fund_num, 
                        bool mbe_email_subscription, 
                        bool iso9001_cert, 
                        string council, 
                        string local_regional_council, 
                        bool iso9002_cert, 
                        System.DateTime contract_termination_date, 
                        string mbe_employer_SSN, 
                        string minority_memo, 
                        System.DateTime date_acquisition, 
                        string mbe_additional_facility, 
                        string minority_class, 
                        System.DateTime mbe_cert_expiration_date, 
                        bool mbe_MBEIC_inv, 
                        string mbe_other_contact_email, 
                        bool otherNMSDCCert, 
                        string otherNMSDCCertCouncil, 
                        System.DateTime otherNMSDCCertDate, 
                        bool denyCert, 
                        string denyCertCouncil, 
                        System.DateTime denyCertDate, 
                        bool govtClear, 
                        string clearLevel, 
                        string unionAffiliation, 
                        bool bonding, 
                        decimal bondingAmount, 
                        string bondingCompany, 
                        bool sharedResources, 
                        string sharedResourcesDesc, 
                        bool otherCompany, 
                        string otherCompanyDesc, 
                        string premisesStatus, 
                        bool otherAgreements, 
                        string pending_lawsuit_details, 
                        string bankruptcyDetails, 
                        string history, 
                        string marketingChannel, 
                        decimal avgDollarValueInv, 
                        bool corporatePlus, 
                        string pword, 
                        System.DateTime lastDeterminationDate, 
                        string corpPlusSponsor, 
                        string customerNatContracts, 
                        int phoneExtension, 
                        string remarks) {
                MBERow rowMBERow = ((MBERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        mbe_cert_num,
                        council_ID_num,
                        mbe_business_type,
                        mbe_business_product_service,
                        mbe_other_cert,
                        mbe_federal_IRS_num,
                        mbe_business_establish_date,
                        mbe_date_certified,
                        iso9000_cert,
                        mbe_parent_company,
                        mbe_recert_date1,
                        mbe_recert_date2,
                        mbe_recert_date3,
                        mbe_recert_date4,
                        mbe_minority_emp_count,
                        mbe_gross_annual_sale,
                        mbe_geographical_mrkt,
                        mbe_HUB_zone,
                        RMSDC_code,
                        mbe_legal_structure,
                        mbe_owner_salutation,
                        major_customer,
                        mbe_owner_title,
                        owner_Lname,
                        owner_Fname,
                        mbe_other_contact_name,
                        mbe_other_contact_title,
                        mbe_8a_cert,
                        mbe_employee_count,
                        subsidiary,
                        ownership_change,
                        full_time_emp_count,
                        pending_lawsuit,
                        cert_rejection_test,
                        bankruptcy,
                        subsidiary_test,
                        member_history,
                        mbe_DB_num,
                        part_time_emp_count,
                        cert_rejection_reason,
                        method_of_acquisition,
                        check_num,
                        mbe_home_base_business,
                        mbe_8a_cert_num,
                        sinking_fund_num,
                        mbe_email_subscription,
                        iso9001_cert,
                        council,
                        local_regional_council,
                        iso9002_cert,
                        contract_termination_date,
                        mbe_employer_SSN,
                        minority_memo,
                        date_acquisition,
                        mbe_additional_facility,
                        minority_class,
                        mbe_cert_expiration_date,
                        mbe_MBEIC_inv,
                        mbe_other_contact_email,
                        otherNMSDCCert,
                        otherNMSDCCertCouncil,
                        otherNMSDCCertDate,
                        denyCert,
                        denyCertCouncil,
                        denyCertDate,
                        govtClear,
                        clearLevel,
                        unionAffiliation,
                        bonding,
                        bondingAmount,
                        bondingCompany,
                        sharedResources,
                        sharedResourcesDesc,
                        otherCompany,
                        otherCompanyDesc,
                        premisesStatus,
                        otherAgreements,
                        pending_lawsuit_details,
                        bankruptcyDetails,
                        history,
                        marketingChannel,
                        avgDollarValueInv,
                        corporatePlus,
                        pword,
                        lastDeterminationDate,
                        corpPlusSponsor,
                        customerNatContracts,
                        phoneExtension,
                        remarks};
                if ((parentASSOCIATERowByFK_MBE_ASSOCIATE != null)) {
                    columnValuesArray[0] = parentASSOCIATERowByFK_MBE_ASSOCIATE[0];
                }
                rowMBERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMBERow);
                return rowMBERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow FindByassc_ID(int assc_ID) {
                return ((MBERow)(this.Rows.Find(new object[] {
                            assc_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MBEDataTable cln = ((MBEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MBEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnassc_ID = base.Columns["assc_ID"];
                this.columnmbe_cert_num = base.Columns["mbe_cert_num"];
                this.columncouncil_ID_num = base.Columns["council_ID_num"];
                this.columnmbe_business_type = base.Columns["mbe_business_type"];
                this.columnmbe_business_product_service = base.Columns["mbe_business_product_service"];
                this.columnmbe_other_cert = base.Columns["mbe_other_cert"];
                this.columnmbe_federal_IRS_num = base.Columns["mbe_federal_IRS_num"];
                this.columnmbe_business_establish_date = base.Columns["mbe_business_establish_date"];
                this.columnmbe_date_certified = base.Columns["mbe_date_certified"];
                this.columniso9000_cert = base.Columns["iso9000_cert"];
                this.columnmbe_parent_company = base.Columns["mbe_parent_company"];
                this.columnmbe_recert_date1 = base.Columns["mbe_recert_date1"];
                this.columnmbe_recert_date2 = base.Columns["mbe_recert_date2"];
                this.columnmbe_recert_date3 = base.Columns["mbe_recert_date3"];
                this.columnmbe_recert_date4 = base.Columns["mbe_recert_date4"];
                this.columnmbe_minority_emp_count = base.Columns["mbe_minority_emp_count"];
                this.columnmbe_gross_annual_sale = base.Columns["mbe_gross_annual_sale"];
                this.columnmbe_geographical_mrkt = base.Columns["mbe_geographical_mrkt"];
                this.columnmbe_HUB_zone = base.Columns["mbe_HUB_zone"];
                this.columnRMSDC_code = base.Columns["RMSDC_code"];
                this.columnmbe_legal_structure = base.Columns["mbe_legal_structure"];
                this.columnmbe_owner_salutation = base.Columns["mbe_owner_salutation"];
                this.columnmajor_customer = base.Columns["major_customer"];
                this.columnmbe_owner_title = base.Columns["mbe_owner_title"];
                this.columnowner_Lname = base.Columns["owner_Lname"];
                this.columnowner_Fname = base.Columns["owner_Fname"];
                this.columnmbe_other_contact_name = base.Columns["mbe_other_contact_name"];
                this.columnmbe_other_contact_title = base.Columns["mbe_other_contact_title"];
                this.columnmbe_8a_cert = base.Columns["mbe_8a_cert"];
                this.columnmbe_employee_count = base.Columns["mbe_employee_count"];
                this.columnsubsidiary = base.Columns["subsidiary"];
                this.columnownership_change = base.Columns["ownership_change"];
                this.columnfull_time_emp_count = base.Columns["full_time_emp_count"];
                this.columnpending_lawsuit = base.Columns["pending_lawsuit"];
                this.columncert_rejection_test = base.Columns["cert_rejection_test"];
                this.columnbankruptcy = base.Columns["bankruptcy"];
                this.columnsubsidiary_test = base.Columns["subsidiary_test"];
                this.columnmember_history = base.Columns["member_history"];
                this.columnmbe_DB_num = base.Columns["mbe_DB_num"];
                this.columnpart_time_emp_count = base.Columns["part_time_emp_count"];
                this.columncert_rejection_reason = base.Columns["cert_rejection_reason"];
                this.columnmethod_of_acquisition = base.Columns["method_of_acquisition"];
                this.columncheck_num = base.Columns["check_num"];
                this.columnmbe_home_base_business = base.Columns["mbe_home_base_business"];
                this.columnmbe_8a_cert_num = base.Columns["mbe_8a_cert_num"];
                this.columnsinking_fund_num = base.Columns["sinking_fund_num"];
                this.columnmbe_email_subscription = base.Columns["mbe_email_subscription"];
                this.columniso9001_cert = base.Columns["iso9001_cert"];
                this.columncouncil = base.Columns["council"];
                this.columnlocal_regional_council = base.Columns["local_regional_council"];
                this.columniso9002_cert = base.Columns["iso9002_cert"];
                this.columncontract_termination_date = base.Columns["contract_termination_date"];
                this.columnmbe_employer_SSN = base.Columns["mbe_employer_SSN"];
                this.columnminority_memo = base.Columns["minority_memo"];
                this.columndate_acquisition = base.Columns["date_acquisition"];
                this.columnmbe_additional_facility = base.Columns["mbe_additional_facility"];
                this.columnminority_class = base.Columns["minority_class"];
                this.columnmbe_cert_expiration_date = base.Columns["mbe_cert_expiration_date"];
                this.columnmbe_MBEIC_inv = base.Columns["mbe_MBEIC_inv"];
                this.columnmbe_other_contact_email = base.Columns["mbe_other_contact_email"];
                this.columnotherNMSDCCert = base.Columns["otherNMSDCCert"];
                this.columnotherNMSDCCertCouncil = base.Columns["otherNMSDCCertCouncil"];
                this.columnotherNMSDCCertDate = base.Columns["otherNMSDCCertDate"];
                this.columndenyCert = base.Columns["denyCert"];
                this.columndenyCertCouncil = base.Columns["denyCertCouncil"];
                this.columndenyCertDate = base.Columns["denyCertDate"];
                this.columngovtClear = base.Columns["govtClear"];
                this.columnclearLevel = base.Columns["clearLevel"];
                this.columnunionAffiliation = base.Columns["unionAffiliation"];
                this.columnbonding = base.Columns["bonding"];
                this.columnbondingAmount = base.Columns["bondingAmount"];
                this.columnbondingCompany = base.Columns["bondingCompany"];
                this.columnsharedResources = base.Columns["sharedResources"];
                this.columnsharedResourcesDesc = base.Columns["sharedResourcesDesc"];
                this.columnotherCompany = base.Columns["otherCompany"];
                this.columnotherCompanyDesc = base.Columns["otherCompanyDesc"];
                this.columnpremisesStatus = base.Columns["premisesStatus"];
                this.columnotherAgreements = base.Columns["otherAgreements"];
                this.columnpending_lawsuit_details = base.Columns["pending_lawsuit_details"];
                this.columnbankruptcyDetails = base.Columns["bankruptcyDetails"];
                this.columnhistory = base.Columns["history"];
                this.columnmarketingChannel = base.Columns["marketingChannel"];
                this.columnavgDollarValueInv = base.Columns["avgDollarValueInv"];
                this.columncorporatePlus = base.Columns["corporatePlus"];
                this.columnpword = base.Columns["pword"];
                this.columnlastDeterminationDate = base.Columns["lastDeterminationDate"];
                this.columncorpPlusSponsor = base.Columns["corpPlusSponsor"];
                this.columncustomerNatContracts = base.Columns["customerNatContracts"];
                this.columnphoneExtension = base.Columns["phoneExtension"];
                this.columnremarks = base.Columns["remarks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnassc_ID = new global::System.Data.DataColumn("assc_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_ID);
                this.columnmbe_cert_num = new global::System.Data.DataColumn("mbe_cert_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_cert_num);
                this.columncouncil_ID_num = new global::System.Data.DataColumn("council_ID_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncouncil_ID_num);
                this.columnmbe_business_type = new global::System.Data.DataColumn("mbe_business_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_business_type);
                this.columnmbe_business_product_service = new global::System.Data.DataColumn("mbe_business_product_service", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_business_product_service);
                this.columnmbe_other_cert = new global::System.Data.DataColumn("mbe_other_cert", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_other_cert);
                this.columnmbe_federal_IRS_num = new global::System.Data.DataColumn("mbe_federal_IRS_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_federal_IRS_num);
                this.columnmbe_business_establish_date = new global::System.Data.DataColumn("mbe_business_establish_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_business_establish_date);
                this.columnmbe_date_certified = new global::System.Data.DataColumn("mbe_date_certified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_date_certified);
                this.columniso9000_cert = new global::System.Data.DataColumn("iso9000_cert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniso9000_cert);
                this.columnmbe_parent_company = new global::System.Data.DataColumn("mbe_parent_company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_parent_company);
                this.columnmbe_recert_date1 = new global::System.Data.DataColumn("mbe_recert_date1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_recert_date1);
                this.columnmbe_recert_date2 = new global::System.Data.DataColumn("mbe_recert_date2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_recert_date2);
                this.columnmbe_recert_date3 = new global::System.Data.DataColumn("mbe_recert_date3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_recert_date3);
                this.columnmbe_recert_date4 = new global::System.Data.DataColumn("mbe_recert_date4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_recert_date4);
                this.columnmbe_minority_emp_count = new global::System.Data.DataColumn("mbe_minority_emp_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_minority_emp_count);
                this.columnmbe_gross_annual_sale = new global::System.Data.DataColumn("mbe_gross_annual_sale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_gross_annual_sale);
                this.columnmbe_geographical_mrkt = new global::System.Data.DataColumn("mbe_geographical_mrkt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_geographical_mrkt);
                this.columnmbe_HUB_zone = new global::System.Data.DataColumn("mbe_HUB_zone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_HUB_zone);
                this.columnRMSDC_code = new global::System.Data.DataColumn("RMSDC_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMSDC_code);
                this.columnmbe_legal_structure = new global::System.Data.DataColumn("mbe_legal_structure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_legal_structure);
                this.columnmbe_owner_salutation = new global::System.Data.DataColumn("mbe_owner_salutation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_owner_salutation);
                this.columnmajor_customer = new global::System.Data.DataColumn("major_customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmajor_customer);
                this.columnmbe_owner_title = new global::System.Data.DataColumn("mbe_owner_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_owner_title);
                this.columnowner_Lname = new global::System.Data.DataColumn("owner_Lname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowner_Lname);
                this.columnowner_Fname = new global::System.Data.DataColumn("owner_Fname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowner_Fname);
                this.columnmbe_other_contact_name = new global::System.Data.DataColumn("mbe_other_contact_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_other_contact_name);
                this.columnmbe_other_contact_title = new global::System.Data.DataColumn("mbe_other_contact_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_other_contact_title);
                this.columnmbe_8a_cert = new global::System.Data.DataColumn("mbe_8a_cert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_8a_cert);
                this.columnmbe_employee_count = new global::System.Data.DataColumn("mbe_employee_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_employee_count);
                this.columnsubsidiary = new global::System.Data.DataColumn("subsidiary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubsidiary);
                this.columnownership_change = new global::System.Data.DataColumn("ownership_change", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownership_change);
                this.columnfull_time_emp_count = new global::System.Data.DataColumn("full_time_emp_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfull_time_emp_count);
                this.columnpending_lawsuit = new global::System.Data.DataColumn("pending_lawsuit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpending_lawsuit);
                this.columncert_rejection_test = new global::System.Data.DataColumn("cert_rejection_test", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncert_rejection_test);
                this.columnbankruptcy = new global::System.Data.DataColumn("bankruptcy", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankruptcy);
                this.columnsubsidiary_test = new global::System.Data.DataColumn("subsidiary_test", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubsidiary_test);
                this.columnmember_history = new global::System.Data.DataColumn("member_history", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmember_history);
                this.columnmbe_DB_num = new global::System.Data.DataColumn("mbe_DB_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_DB_num);
                this.columnpart_time_emp_count = new global::System.Data.DataColumn("part_time_emp_count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpart_time_emp_count);
                this.columncert_rejection_reason = new global::System.Data.DataColumn("cert_rejection_reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncert_rejection_reason);
                this.columnmethod_of_acquisition = new global::System.Data.DataColumn("method_of_acquisition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmethod_of_acquisition);
                this.columncheck_num = new global::System.Data.DataColumn("check_num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncheck_num);
                this.columnmbe_home_base_business = new global::System.Data.DataColumn("mbe_home_base_business", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_home_base_business);
                this.columnmbe_8a_cert_num = new global::System.Data.DataColumn("mbe_8a_cert_num", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_8a_cert_num);
                this.columnsinking_fund_num = new global::System.Data.DataColumn("sinking_fund_num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsinking_fund_num);
                this.columnmbe_email_subscription = new global::System.Data.DataColumn("mbe_email_subscription", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_email_subscription);
                this.columniso9001_cert = new global::System.Data.DataColumn("iso9001_cert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniso9001_cert);
                this.columncouncil = new global::System.Data.DataColumn("council", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncouncil);
                this.columnlocal_regional_council = new global::System.Data.DataColumn("local_regional_council", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocal_regional_council);
                this.columniso9002_cert = new global::System.Data.DataColumn("iso9002_cert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniso9002_cert);
                this.columncontract_termination_date = new global::System.Data.DataColumn("contract_termination_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontract_termination_date);
                this.columnmbe_employer_SSN = new global::System.Data.DataColumn("mbe_employer_SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_employer_SSN);
                this.columnminority_memo = new global::System.Data.DataColumn("minority_memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminority_memo);
                this.columndate_acquisition = new global::System.Data.DataColumn("date_acquisition", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_acquisition);
                this.columnmbe_additional_facility = new global::System.Data.DataColumn("mbe_additional_facility", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_additional_facility);
                this.columnminority_class = new global::System.Data.DataColumn("minority_class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnminority_class);
                this.columnmbe_cert_expiration_date = new global::System.Data.DataColumn("mbe_cert_expiration_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_cert_expiration_date);
                this.columnmbe_MBEIC_inv = new global::System.Data.DataColumn("mbe_MBEIC_inv", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_MBEIC_inv);
                this.columnmbe_other_contact_email = new global::System.Data.DataColumn("mbe_other_contact_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmbe_other_contact_email);
                this.columnotherNMSDCCert = new global::System.Data.DataColumn("otherNMSDCCert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherNMSDCCert);
                this.columnotherNMSDCCertCouncil = new global::System.Data.DataColumn("otherNMSDCCertCouncil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherNMSDCCertCouncil);
                this.columnotherNMSDCCertDate = new global::System.Data.DataColumn("otherNMSDCCertDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherNMSDCCertDate);
                this.columndenyCert = new global::System.Data.DataColumn("denyCert", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndenyCert);
                this.columndenyCertCouncil = new global::System.Data.DataColumn("denyCertCouncil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndenyCertCouncil);
                this.columndenyCertDate = new global::System.Data.DataColumn("denyCertDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndenyCertDate);
                this.columngovtClear = new global::System.Data.DataColumn("govtClear", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngovtClear);
                this.columnclearLevel = new global::System.Data.DataColumn("clearLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclearLevel);
                this.columnunionAffiliation = new global::System.Data.DataColumn("unionAffiliation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunionAffiliation);
                this.columnbonding = new global::System.Data.DataColumn("bonding", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbonding);
                this.columnbondingAmount = new global::System.Data.DataColumn("bondingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbondingAmount);
                this.columnbondingCompany = new global::System.Data.DataColumn("bondingCompany", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbondingCompany);
                this.columnsharedResources = new global::System.Data.DataColumn("sharedResources", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsharedResources);
                this.columnsharedResourcesDesc = new global::System.Data.DataColumn("sharedResourcesDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsharedResourcesDesc);
                this.columnotherCompany = new global::System.Data.DataColumn("otherCompany", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherCompany);
                this.columnotherCompanyDesc = new global::System.Data.DataColumn("otherCompanyDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherCompanyDesc);
                this.columnpremisesStatus = new global::System.Data.DataColumn("premisesStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpremisesStatus);
                this.columnotherAgreements = new global::System.Data.DataColumn("otherAgreements", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnotherAgreements);
                this.columnpending_lawsuit_details = new global::System.Data.DataColumn("pending_lawsuit_details", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpending_lawsuit_details);
                this.columnbankruptcyDetails = new global::System.Data.DataColumn("bankruptcyDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbankruptcyDetails);
                this.columnhistory = new global::System.Data.DataColumn("history", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhistory);
                this.columnmarketingChannel = new global::System.Data.DataColumn("marketingChannel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarketingChannel);
                this.columnavgDollarValueInv = new global::System.Data.DataColumn("avgDollarValueInv", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnavgDollarValueInv);
                this.columncorporatePlus = new global::System.Data.DataColumn("corporatePlus", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncorporatePlus);
                this.columnpword = new global::System.Data.DataColumn("pword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpword);
                this.columnlastDeterminationDate = new global::System.Data.DataColumn("lastDeterminationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlastDeterminationDate);
                this.columncorpPlusSponsor = new global::System.Data.DataColumn("corpPlusSponsor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncorpPlusSponsor);
                this.columncustomerNatContracts = new global::System.Data.DataColumn("customerNatContracts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerNatContracts);
                this.columnphoneExtension = new global::System.Data.DataColumn("phoneExtension", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneExtension);
                this.columnremarks = new global::System.Data.DataColumn("remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremarks);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnassc_ID}, true));
                this.columnassc_ID.AllowDBNull = false;
                this.columnassc_ID.Unique = true;
                this.columnmbe_cert_num.MaxLength = 15;
                this.columncouncil_ID_num.MaxLength = 2;
                this.columnmbe_business_type.MaxLength = 50;
                this.columnmbe_business_product_service.MaxLength = 2147483647;
                this.columnmbe_other_cert.MaxLength = 2147483647;
                this.columnmbe_federal_IRS_num.MaxLength = 15;
                this.columnmbe_parent_company.MaxLength = 60;
                this.columnmbe_geographical_mrkt.MaxLength = 10;
                this.columnRMSDC_code.MaxLength = 8;
                this.columnmbe_legal_structure.MaxLength = 5;
                this.columnmbe_owner_salutation.MaxLength = 5;
                this.columnmajor_customer.MaxLength = 2147483647;
                this.columnmbe_owner_title.MaxLength = 50;
                this.columnowner_Lname.MaxLength = 30;
                this.columnowner_Fname.MaxLength = 30;
                this.columnmbe_other_contact_name.MaxLength = 50;
                this.columnmbe_other_contact_title.MaxLength = 50;
                this.columnsubsidiary.MaxLength = 2147483647;
                this.columnmember_history.MaxLength = 20;
                this.columnmbe_DB_num.MaxLength = 50;
                this.columncert_rejection_reason.MaxLength = 2147483647;
                this.columnmethod_of_acquisition.MaxLength = 50;
                this.columnmbe_8a_cert_num.MaxLength = 50;
                this.columncouncil.MaxLength = 2147483647;
                this.columnlocal_regional_council.MaxLength = 2147483647;
                this.columnmbe_employer_SSN.MaxLength = 50;
                this.columnminority_memo.MaxLength = 2147483647;
                this.columnmbe_additional_facility.MaxLength = 2147483647;
                this.columnminority_class.MaxLength = 100;
                this.columnmbe_other_contact_email.MaxLength = 50;
                this.columnotherNMSDCCertCouncil.MaxLength = 50;
                this.columndenyCertCouncil.MaxLength = 50;
                this.columnclearLevel.MaxLength = 20;
                this.columnunionAffiliation.MaxLength = 2147483647;
                this.columnbondingCompany.MaxLength = 50;
                this.columnsharedResourcesDesc.MaxLength = 2147483647;
                this.columnotherCompanyDesc.MaxLength = 2147483647;
                this.columnpremisesStatus.MaxLength = 10;
                this.columnpending_lawsuit_details.MaxLength = 2147483647;
                this.columnbankruptcyDetails.MaxLength = 2147483647;
                this.columnhistory.MaxLength = 2147483647;
                this.columnmarketingChannel.MaxLength = 30;
                this.columnpword.MaxLength = 20;
                this.columncorpPlusSponsor.MaxLength = 100;
                this.columncustomerNatContracts.MaxLength = 2147483647;
                this.columnremarks.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow NewMBERow() {
                return ((MBERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MBERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MBERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MBERowChanged != null)) {
                    this.MBERowChanged(this, new MBERowChangeEvent(((MBERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MBERowChanging != null)) {
                    this.MBERowChanging(this, new MBERowChangeEvent(((MBERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MBERowDeleted != null)) {
                    this.MBERowDeleted(this, new MBERowChangeEvent(((MBERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MBERowDeleting != null)) {
                    this.MBERowDeleting(this, new MBERowChangeEvent(((MBERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMBERow(MBERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScmbdcDataSet ds = new ScmbdcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MBEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MBE_GROSS_ANNUAL_SALEDataTable : global::System.Data.TypedTableBase<MBE_GROSS_ANNUAL_SALERow> {
            
            private global::System.Data.DataColumn columnassc_ID;
            
            private global::System.Data.DataColumn columngross_annual_sale_date;
            
            private global::System.Data.DataColumn columngross_annual_sale;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALEDataTable() {
                this.TableName = "MBE_GROSS_ANNUAL_SALE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MBE_GROSS_ANNUAL_SALEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MBE_GROSS_ANNUAL_SALEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn assc_IDColumn {
                get {
                    return this.columnassc_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gross_annual_sale_dateColumn {
                get {
                    return this.columngross_annual_sale_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gross_annual_saleColumn {
                get {
                    return this.columngross_annual_sale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERow this[int index] {
                get {
                    return ((MBE_GROSS_ANNUAL_SALERow)(this.Rows[index]));
                }
            }
            
            public event MBE_GROSS_ANNUAL_SALERowChangeEventHandler MBE_GROSS_ANNUAL_SALERowChanging;
            
            public event MBE_GROSS_ANNUAL_SALERowChangeEventHandler MBE_GROSS_ANNUAL_SALERowChanged;
            
            public event MBE_GROSS_ANNUAL_SALERowChangeEventHandler MBE_GROSS_ANNUAL_SALERowDeleting;
            
            public event MBE_GROSS_ANNUAL_SALERowChangeEventHandler MBE_GROSS_ANNUAL_SALERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMBE_GROSS_ANNUAL_SALERow(MBE_GROSS_ANNUAL_SALERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERow AddMBE_GROSS_ANNUAL_SALERow(MBERow parentMBERowByFK_MBE_GROSS_ANNUAL_SALE_MBE, System.DateTime gross_annual_sale_date, decimal gross_annual_sale) {
                MBE_GROSS_ANNUAL_SALERow rowMBE_GROSS_ANNUAL_SALERow = ((MBE_GROSS_ANNUAL_SALERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        gross_annual_sale_date,
                        gross_annual_sale};
                if ((parentMBERowByFK_MBE_GROSS_ANNUAL_SALE_MBE != null)) {
                    columnValuesArray[0] = parentMBERowByFK_MBE_GROSS_ANNUAL_SALE_MBE[0];
                }
                rowMBE_GROSS_ANNUAL_SALERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMBE_GROSS_ANNUAL_SALERow);
                return rowMBE_GROSS_ANNUAL_SALERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERow FindByassc_IDgross_annual_sale_date(int assc_ID, System.DateTime gross_annual_sale_date) {
                return ((MBE_GROSS_ANNUAL_SALERow)(this.Rows.Find(new object[] {
                            assc_ID,
                            gross_annual_sale_date})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MBE_GROSS_ANNUAL_SALEDataTable cln = ((MBE_GROSS_ANNUAL_SALEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MBE_GROSS_ANNUAL_SALEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnassc_ID = base.Columns["assc_ID"];
                this.columngross_annual_sale_date = base.Columns["gross_annual_sale_date"];
                this.columngross_annual_sale = base.Columns["gross_annual_sale"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnassc_ID = new global::System.Data.DataColumn("assc_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnassc_ID);
                this.columngross_annual_sale_date = new global::System.Data.DataColumn("gross_annual_sale_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngross_annual_sale_date);
                this.columngross_annual_sale = new global::System.Data.DataColumn("gross_annual_sale", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngross_annual_sale);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnassc_ID,
                                this.columngross_annual_sale_date}, true));
                this.columnassc_ID.AllowDBNull = false;
                this.columngross_annual_sale_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERow NewMBE_GROSS_ANNUAL_SALERow() {
                return ((MBE_GROSS_ANNUAL_SALERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MBE_GROSS_ANNUAL_SALERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MBE_GROSS_ANNUAL_SALERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MBE_GROSS_ANNUAL_SALERowChanged != null)) {
                    this.MBE_GROSS_ANNUAL_SALERowChanged(this, new MBE_GROSS_ANNUAL_SALERowChangeEvent(((MBE_GROSS_ANNUAL_SALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MBE_GROSS_ANNUAL_SALERowChanging != null)) {
                    this.MBE_GROSS_ANNUAL_SALERowChanging(this, new MBE_GROSS_ANNUAL_SALERowChangeEvent(((MBE_GROSS_ANNUAL_SALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MBE_GROSS_ANNUAL_SALERowDeleted != null)) {
                    this.MBE_GROSS_ANNUAL_SALERowDeleted(this, new MBE_GROSS_ANNUAL_SALERowChangeEvent(((MBE_GROSS_ANNUAL_SALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MBE_GROSS_ANNUAL_SALERowDeleting != null)) {
                    this.MBE_GROSS_ANNUAL_SALERowDeleting(this, new MBE_GROSS_ANNUAL_SALERowChangeEvent(((MBE_GROSS_ANNUAL_SALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMBE_GROSS_ANNUAL_SALERow(MBE_GROSS_ANNUAL_SALERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScmbdcDataSet ds = new ScmbdcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MBE_GROSS_ANNUAL_SALEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STATE_LISTDataTable : global::System.Data.TypedTableBase<STATE_LISTRow> {
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTDataTable() {
                this.TableName = "STATE_LIST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STATE_LISTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STATE_LISTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRow this[int index] {
                get {
                    return ((STATE_LISTRow)(this.Rows[index]));
                }
            }
            
            public event STATE_LISTRowChangeEventHandler STATE_LISTRowChanging;
            
            public event STATE_LISTRowChangeEventHandler STATE_LISTRowChanged;
            
            public event STATE_LISTRowChangeEventHandler STATE_LISTRowDeleting;
            
            public event STATE_LISTRowChangeEventHandler STATE_LISTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTATE_LISTRow(STATE_LISTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRow AddSTATE_LISTRow(string Code, string Name) {
                STATE_LISTRow rowSTATE_LISTRow = ((STATE_LISTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Code,
                        Name};
                rowSTATE_LISTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTATE_LISTRow);
                return rowSTATE_LISTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRow FindByCode(string Code) {
                return ((STATE_LISTRow)(this.Rows.Find(new object[] {
                            Code})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STATE_LISTDataTable cln = ((STATE_LISTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STATE_LISTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode = base.Columns["Code"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode}, true));
                this.columnCode.AllowDBNull = false;
                this.columnCode.Unique = true;
                this.columnCode.MaxLength = 2;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRow NewSTATE_LISTRow() {
                return ((STATE_LISTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STATE_LISTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STATE_LISTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STATE_LISTRowChanged != null)) {
                    this.STATE_LISTRowChanged(this, new STATE_LISTRowChangeEvent(((STATE_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STATE_LISTRowChanging != null)) {
                    this.STATE_LISTRowChanging(this, new STATE_LISTRowChangeEvent(((STATE_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STATE_LISTRowDeleted != null)) {
                    this.STATE_LISTRowDeleted(this, new STATE_LISTRowChangeEvent(((STATE_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STATE_LISTRowDeleting != null)) {
                    this.STATE_LISTRowDeleting(this, new STATE_LISTRowChangeEvent(((STATE_LISTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTATE_LISTRow(STATE_LISTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ScmbdcDataSet ds = new ScmbdcDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STATE_LISTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ASSOCIATERow : global::System.Data.DataRow {
            
            private ASSOCIATEDataTable tableASSOCIATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ASSOCIATERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableASSOCIATE = ((ASSOCIATEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int assc_ID {
                get {
                    return ((int)(this[this.tableASSOCIATE.assc_IDColumn]));
                }
                set {
                    this[this.tableASSOCIATE.assc_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_business_name {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_business_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_business_name\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_business_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string key_contact_title {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.key_contact_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'key_contact_title\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.key_contact_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string key_contact_Fname {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.key_contact_FnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'key_contact_Fname\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.key_contact_FnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string key_contact_Lname {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.key_contact_LnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'key_contact_Lname\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.key_contact_LnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_address1 {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_address1\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_address2 {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_address2\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_city {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_city\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_state {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_state\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_zipcode {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_zipcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_zipcode\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_zipcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_phone {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_phone\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_fax_num {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_fax_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_fax_num\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_fax_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_email {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_email\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_website {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_websiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_website\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_websiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_mail_address1 {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_mail_address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_mail_address1\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_mail_address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_mail_address2 {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_mail_address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_mail_address2\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_mail_address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_mail_city {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_mail_cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_mail_city\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_mail_cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_mail_state {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_mail_stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_mail_state\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_mail_stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_mail_zipcode {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_mail_zipcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_mail_zipcode\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_mail_zipcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_payment_type {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_payment_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_payment_type\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_payment_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_pdf_filename {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_pdf_filenameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_pdf_filename\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_pdf_filenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime assc_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableASSOCIATE.assc_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_date\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_status {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_status\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal assc_fee_amt {
                get {
                    try {
                        return ((decimal)(this[this.tableASSOCIATE.assc_fee_amtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_fee_amt\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_fee_amtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_fee_status {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_fee_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_fee_status\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_fee_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_type {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_type\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastModificationTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableASSOCIATE.LastModificationTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastModificationTime\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.LastModificationTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EntryID {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.EntryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryID\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.EntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool insurance_inquiry {
                get {
                    try {
                        return ((bool)(this[this.tableASSOCIATE.insurance_inquiryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'insurance_inquiry\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.insurance_inquiryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int insurance_CA_employees {
                get {
                    try {
                        return ((int)(this[this.tableASSOCIATE.insurance_CA_employeesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'insurance_CA_employees\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.insurance_CA_employeesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string assc_other_phone {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.assc_other_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'assc_other_phone\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.assc_other_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int email_status {
                get {
                    try {
                        return ((int)(this[this.tableASSOCIATE.email_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email_status\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.email_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email_country {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.email_countryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email_country\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.email_countryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime email_LastAttempt {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableASSOCIATE.email_LastAttemptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email_LastAttempt\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.email_LastAttemptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email_LastResponse {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.email_LastResponseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email_LastResponse\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.email_LastResponseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email_VerificationResult {
                get {
                    try {
                        return ((string)(this[this.tableASSOCIATE.email_VerificationResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email_VerificationResult\' in table \'ASSOCIATE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableASSOCIATE.email_VerificationResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRow STATE_LISTRow {
                get {
                    return ((STATE_LISTRow)(this.GetParentRow(this.Table.ParentRelations["STATE_LIST_ASSOCIATE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["STATE_LIST_ASSOCIATE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_business_nameNull() {
                return this.IsNull(this.tableASSOCIATE.assc_business_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_business_nameNull() {
                this[this.tableASSOCIATE.assc_business_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskey_contact_titleNull() {
                return this.IsNull(this.tableASSOCIATE.key_contact_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkey_contact_titleNull() {
                this[this.tableASSOCIATE.key_contact_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskey_contact_FnameNull() {
                return this.IsNull(this.tableASSOCIATE.key_contact_FnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkey_contact_FnameNull() {
                this[this.tableASSOCIATE.key_contact_FnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iskey_contact_LnameNull() {
                return this.IsNull(this.tableASSOCIATE.key_contact_LnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setkey_contact_LnameNull() {
                this[this.tableASSOCIATE.key_contact_LnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_address1Null() {
                return this.IsNull(this.tableASSOCIATE.assc_address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_address1Null() {
                this[this.tableASSOCIATE.assc_address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_address2Null() {
                return this.IsNull(this.tableASSOCIATE.assc_address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_address2Null() {
                this[this.tableASSOCIATE.assc_address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_cityNull() {
                return this.IsNull(this.tableASSOCIATE.assc_cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_cityNull() {
                this[this.tableASSOCIATE.assc_cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_stateNull() {
                return this.IsNull(this.tableASSOCIATE.assc_stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_stateNull() {
                this[this.tableASSOCIATE.assc_stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_zipcodeNull() {
                return this.IsNull(this.tableASSOCIATE.assc_zipcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_zipcodeNull() {
                this[this.tableASSOCIATE.assc_zipcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_phoneNull() {
                return this.IsNull(this.tableASSOCIATE.assc_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_phoneNull() {
                this[this.tableASSOCIATE.assc_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_fax_numNull() {
                return this.IsNull(this.tableASSOCIATE.assc_fax_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_fax_numNull() {
                this[this.tableASSOCIATE.assc_fax_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_emailNull() {
                return this.IsNull(this.tableASSOCIATE.assc_emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_emailNull() {
                this[this.tableASSOCIATE.assc_emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_websiteNull() {
                return this.IsNull(this.tableASSOCIATE.assc_websiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_websiteNull() {
                this[this.tableASSOCIATE.assc_websiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_mail_address1Null() {
                return this.IsNull(this.tableASSOCIATE.assc_mail_address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_mail_address1Null() {
                this[this.tableASSOCIATE.assc_mail_address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_mail_address2Null() {
                return this.IsNull(this.tableASSOCIATE.assc_mail_address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_mail_address2Null() {
                this[this.tableASSOCIATE.assc_mail_address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_mail_cityNull() {
                return this.IsNull(this.tableASSOCIATE.assc_mail_cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_mail_cityNull() {
                this[this.tableASSOCIATE.assc_mail_cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_mail_stateNull() {
                return this.IsNull(this.tableASSOCIATE.assc_mail_stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_mail_stateNull() {
                this[this.tableASSOCIATE.assc_mail_stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_mail_zipcodeNull() {
                return this.IsNull(this.tableASSOCIATE.assc_mail_zipcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_mail_zipcodeNull() {
                this[this.tableASSOCIATE.assc_mail_zipcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_payment_typeNull() {
                return this.IsNull(this.tableASSOCIATE.assc_payment_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_payment_typeNull() {
                this[this.tableASSOCIATE.assc_payment_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_pdf_filenameNull() {
                return this.IsNull(this.tableASSOCIATE.assc_pdf_filenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_pdf_filenameNull() {
                this[this.tableASSOCIATE.assc_pdf_filenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_dateNull() {
                return this.IsNull(this.tableASSOCIATE.assc_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_dateNull() {
                this[this.tableASSOCIATE.assc_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_statusNull() {
                return this.IsNull(this.tableASSOCIATE.assc_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_statusNull() {
                this[this.tableASSOCIATE.assc_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_fee_amtNull() {
                return this.IsNull(this.tableASSOCIATE.assc_fee_amtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_fee_amtNull() {
                this[this.tableASSOCIATE.assc_fee_amtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_fee_statusNull() {
                return this.IsNull(this.tableASSOCIATE.assc_fee_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_fee_statusNull() {
                this[this.tableASSOCIATE.assc_fee_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_typeNull() {
                return this.IsNull(this.tableASSOCIATE.assc_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_typeNull() {
                this[this.tableASSOCIATE.assc_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastModificationTimeNull() {
                return this.IsNull(this.tableASSOCIATE.LastModificationTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastModificationTimeNull() {
                this[this.tableASSOCIATE.LastModificationTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntryIDNull() {
                return this.IsNull(this.tableASSOCIATE.EntryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntryIDNull() {
                this[this.tableASSOCIATE.EntryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinsurance_inquiryNull() {
                return this.IsNull(this.tableASSOCIATE.insurance_inquiryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinsurance_inquiryNull() {
                this[this.tableASSOCIATE.insurance_inquiryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinsurance_CA_employeesNull() {
                return this.IsNull(this.tableASSOCIATE.insurance_CA_employeesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinsurance_CA_employeesNull() {
                this[this.tableASSOCIATE.insurance_CA_employeesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isassc_other_phoneNull() {
                return this.IsNull(this.tableASSOCIATE.assc_other_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setassc_other_phoneNull() {
                this[this.tableASSOCIATE.assc_other_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemail_statusNull() {
                return this.IsNull(this.tableASSOCIATE.email_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemail_statusNull() {
                this[this.tableASSOCIATE.email_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemail_countryNull() {
                return this.IsNull(this.tableASSOCIATE.email_countryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemail_countryNull() {
                this[this.tableASSOCIATE.email_countryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemail_LastAttemptNull() {
                return this.IsNull(this.tableASSOCIATE.email_LastAttemptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemail_LastAttemptNull() {
                this[this.tableASSOCIATE.email_LastAttemptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemail_LastResponseNull() {
                return this.IsNull(this.tableASSOCIATE.email_LastResponseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemail_LastResponseNull() {
                this[this.tableASSOCIATE.email_LastResponseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemail_VerificationResultNull() {
                return this.IsNull(this.tableASSOCIATE.email_VerificationResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemail_VerificationResultNull() {
                this[this.tableASSOCIATE.email_VerificationResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow[] GetMBERows() {
                if ((this.Table.ChildRelations["FK_MBE_ASSOCIATE"] == null)) {
                    return new MBERow[0];
                }
                else {
                    return ((MBERow[])(base.GetChildRows(this.Table.ChildRelations["FK_MBE_ASSOCIATE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MBERow : global::System.Data.DataRow {
            
            private MBEDataTable tableMBE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MBERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMBE = ((MBEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int assc_ID {
                get {
                    return ((int)(this[this.tableMBE.assc_IDColumn]));
                }
                set {
                    this[this.tableMBE.assc_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_cert_num {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_cert_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_cert_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_cert_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string council_ID_num {
                get {
                    try {
                        return ((string)(this[this.tableMBE.council_ID_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'council_ID_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.council_ID_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_business_type {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_business_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_business_type\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_business_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_business_product_service {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_business_product_serviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_business_product_service\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_business_product_serviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_other_cert {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_other_certColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_other_cert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_other_certColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_federal_IRS_num {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_federal_IRS_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_federal_IRS_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_federal_IRS_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_business_establish_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_business_establish_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_business_establish_date\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_business_establish_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_date_certified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_date_certifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_date_certified\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_date_certifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool iso9000_cert {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.iso9000_certColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iso9000_cert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.iso9000_certColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_parent_company {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_parent_companyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_parent_company\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_parent_companyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_recert_date1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_recert_date1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_recert_date1\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_recert_date1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_recert_date2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_recert_date2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_recert_date2\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_recert_date2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_recert_date3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_recert_date3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_recert_date3\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_recert_date3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_recert_date4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_recert_date4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_recert_date4\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_recert_date4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int mbe_minority_emp_count {
                get {
                    try {
                        return ((int)(this[this.tableMBE.mbe_minority_emp_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_minority_emp_count\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_minority_emp_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal mbe_gross_annual_sale {
                get {
                    try {
                        return ((decimal)(this[this.tableMBE.mbe_gross_annual_saleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_gross_annual_sale\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_gross_annual_saleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_geographical_mrkt {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_geographical_mrktColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_geographical_mrkt\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_geographical_mrktColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mbe_HUB_zone {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.mbe_HUB_zoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_HUB_zone\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_HUB_zoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RMSDC_code {
                get {
                    try {
                        return ((string)(this[this.tableMBE.RMSDC_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMSDC_code\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.RMSDC_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_legal_structure {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_legal_structureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_legal_structure\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_legal_structureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_owner_salutation {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_owner_salutationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_owner_salutation\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_owner_salutationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string major_customer {
                get {
                    try {
                        return ((string)(this[this.tableMBE.major_customerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'major_customer\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.major_customerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_owner_title {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_owner_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_owner_title\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_owner_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string owner_Lname {
                get {
                    try {
                        return ((string)(this[this.tableMBE.owner_LnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'owner_Lname\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.owner_LnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string owner_Fname {
                get {
                    try {
                        return ((string)(this[this.tableMBE.owner_FnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'owner_Fname\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.owner_FnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_other_contact_name {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_other_contact_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_other_contact_name\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_other_contact_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_other_contact_title {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_other_contact_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_other_contact_title\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_other_contact_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mbe_8a_cert {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.mbe_8a_certColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_8a_cert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_8a_certColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int mbe_employee_count {
                get {
                    try {
                        return ((int)(this[this.tableMBE.mbe_employee_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_employee_count\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_employee_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string subsidiary {
                get {
                    try {
                        return ((string)(this[this.tableMBE.subsidiaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subsidiary\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.subsidiaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ownership_change {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.ownership_changeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownership_change\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.ownership_changeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int full_time_emp_count {
                get {
                    try {
                        return ((int)(this[this.tableMBE.full_time_emp_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'full_time_emp_count\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.full_time_emp_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool pending_lawsuit {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.pending_lawsuitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pending_lawsuit\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.pending_lawsuitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool cert_rejection_test {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.cert_rejection_testColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cert_rejection_test\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.cert_rejection_testColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bankruptcy {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.bankruptcyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankruptcy\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.bankruptcyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool subsidiary_test {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.subsidiary_testColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subsidiary_test\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.subsidiary_testColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string member_history {
                get {
                    try {
                        return ((string)(this[this.tableMBE.member_historyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'member_history\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.member_historyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_DB_num {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_DB_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_DB_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_DB_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int part_time_emp_count {
                get {
                    try {
                        return ((int)(this[this.tableMBE.part_time_emp_countColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'part_time_emp_count\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.part_time_emp_countColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cert_rejection_reason {
                get {
                    try {
                        return ((string)(this[this.tableMBE.cert_rejection_reasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cert_rejection_reason\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.cert_rejection_reasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string method_of_acquisition {
                get {
                    try {
                        return ((string)(this[this.tableMBE.method_of_acquisitionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'method_of_acquisition\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.method_of_acquisitionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int check_num {
                get {
                    try {
                        return ((int)(this[this.tableMBE.check_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'check_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.check_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mbe_home_base_business {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.mbe_home_base_businessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_home_base_business\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_home_base_businessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_8a_cert_num {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_8a_cert_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_8a_cert_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_8a_cert_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sinking_fund_num {
                get {
                    try {
                        return ((int)(this[this.tableMBE.sinking_fund_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sinking_fund_num\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.sinking_fund_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mbe_email_subscription {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.mbe_email_subscriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_email_subscription\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_email_subscriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool iso9001_cert {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.iso9001_certColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iso9001_cert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.iso9001_certColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string council {
                get {
                    try {
                        return ((string)(this[this.tableMBE.councilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'council\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.councilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string local_regional_council {
                get {
                    try {
                        return ((string)(this[this.tableMBE.local_regional_councilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'local_regional_council\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.local_regional_councilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool iso9002_cert {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.iso9002_certColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iso9002_cert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.iso9002_certColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime contract_termination_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.contract_termination_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contract_termination_date\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.contract_termination_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_employer_SSN {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_employer_SSNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_employer_SSN\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_employer_SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string minority_memo {
                get {
                    try {
                        return ((string)(this[this.tableMBE.minority_memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'minority_memo\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.minority_memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_acquisition {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.date_acquisitionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_acquisition\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.date_acquisitionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_additional_facility {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_additional_facilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_additional_facility\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_additional_facilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string minority_class {
                get {
                    try {
                        return ((string)(this[this.tableMBE.minority_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'minority_class\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.minority_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime mbe_cert_expiration_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.mbe_cert_expiration_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_cert_expiration_date\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_cert_expiration_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mbe_MBEIC_inv {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.mbe_MBEIC_invColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_MBEIC_inv\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_MBEIC_invColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mbe_other_contact_email {
                get {
                    try {
                        return ((string)(this[this.tableMBE.mbe_other_contact_emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mbe_other_contact_email\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.mbe_other_contact_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool otherNMSDCCert {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.otherNMSDCCertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherNMSDCCert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.otherNMSDCCertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string otherNMSDCCertCouncil {
                get {
                    try {
                        return ((string)(this[this.tableMBE.otherNMSDCCertCouncilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherNMSDCCertCouncil\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.otherNMSDCCertCouncilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime otherNMSDCCertDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.otherNMSDCCertDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherNMSDCCertDate\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.otherNMSDCCertDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool denyCert {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.denyCertColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'denyCert\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.denyCertColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string denyCertCouncil {
                get {
                    try {
                        return ((string)(this[this.tableMBE.denyCertCouncilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'denyCertCouncil\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.denyCertCouncilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime denyCertDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.denyCertDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'denyCertDate\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.denyCertDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool govtClear {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.govtClearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'govtClear\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.govtClearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string clearLevel {
                get {
                    try {
                        return ((string)(this[this.tableMBE.clearLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clearLevel\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.clearLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unionAffiliation {
                get {
                    try {
                        return ((string)(this[this.tableMBE.unionAffiliationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unionAffiliation\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.unionAffiliationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool bonding {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.bondingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bonding\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.bondingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal bondingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableMBE.bondingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bondingAmount\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.bondingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bondingCompany {
                get {
                    try {
                        return ((string)(this[this.tableMBE.bondingCompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bondingCompany\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.bondingCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool sharedResources {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.sharedResourcesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sharedResources\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.sharedResourcesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sharedResourcesDesc {
                get {
                    try {
                        return ((string)(this[this.tableMBE.sharedResourcesDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sharedResourcesDesc\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.sharedResourcesDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool otherCompany {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.otherCompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherCompany\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.otherCompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string otherCompanyDesc {
                get {
                    try {
                        return ((string)(this[this.tableMBE.otherCompanyDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherCompanyDesc\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.otherCompanyDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string premisesStatus {
                get {
                    try {
                        return ((string)(this[this.tableMBE.premisesStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'premisesStatus\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.premisesStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool otherAgreements {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.otherAgreementsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'otherAgreements\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.otherAgreementsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pending_lawsuit_details {
                get {
                    try {
                        return ((string)(this[this.tableMBE.pending_lawsuit_detailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pending_lawsuit_details\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.pending_lawsuit_detailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bankruptcyDetails {
                get {
                    try {
                        return ((string)(this[this.tableMBE.bankruptcyDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bankruptcyDetails\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.bankruptcyDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string history {
                get {
                    try {
                        return ((string)(this[this.tableMBE.historyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'history\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.historyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string marketingChannel {
                get {
                    try {
                        return ((string)(this[this.tableMBE.marketingChannelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'marketingChannel\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.marketingChannelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal avgDollarValueInv {
                get {
                    try {
                        return ((decimal)(this[this.tableMBE.avgDollarValueInvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'avgDollarValueInv\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.avgDollarValueInvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool corporatePlus {
                get {
                    try {
                        return ((bool)(this[this.tableMBE.corporatePlusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'corporatePlus\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.corporatePlusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pword {
                get {
                    try {
                        return ((string)(this[this.tableMBE.pwordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pword\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.pwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime lastDeterminationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMBE.lastDeterminationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'lastDeterminationDate\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.lastDeterminationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string corpPlusSponsor {
                get {
                    try {
                        return ((string)(this[this.tableMBE.corpPlusSponsorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'corpPlusSponsor\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.corpPlusSponsorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string customerNatContracts {
                get {
                    try {
                        return ((string)(this[this.tableMBE.customerNatContractsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customerNatContracts\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.customerNatContractsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int phoneExtension {
                get {
                    try {
                        return ((int)(this[this.tableMBE.phoneExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phoneExtension\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.phoneExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remarks {
                get {
                    try {
                        return ((string)(this[this.tableMBE.remarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'remarks\' in table \'MBE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMBE.remarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow ASSOCIATERow {
                get {
                    return ((ASSOCIATERow)(this.GetParentRow(this.Table.ParentRelations["FK_MBE_ASSOCIATE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MBE_ASSOCIATE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_cert_numNull() {
                return this.IsNull(this.tableMBE.mbe_cert_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_cert_numNull() {
                this[this.tableMBE.mbe_cert_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscouncil_ID_numNull() {
                return this.IsNull(this.tableMBE.council_ID_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcouncil_ID_numNull() {
                this[this.tableMBE.council_ID_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_business_typeNull() {
                return this.IsNull(this.tableMBE.mbe_business_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_business_typeNull() {
                this[this.tableMBE.mbe_business_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_business_product_serviceNull() {
                return this.IsNull(this.tableMBE.mbe_business_product_serviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_business_product_serviceNull() {
                this[this.tableMBE.mbe_business_product_serviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_other_certNull() {
                return this.IsNull(this.tableMBE.mbe_other_certColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_other_certNull() {
                this[this.tableMBE.mbe_other_certColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_federal_IRS_numNull() {
                return this.IsNull(this.tableMBE.mbe_federal_IRS_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_federal_IRS_numNull() {
                this[this.tableMBE.mbe_federal_IRS_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_business_establish_dateNull() {
                return this.IsNull(this.tableMBE.mbe_business_establish_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_business_establish_dateNull() {
                this[this.tableMBE.mbe_business_establish_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_date_certifiedNull() {
                return this.IsNull(this.tableMBE.mbe_date_certifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_date_certifiedNull() {
                this[this.tableMBE.mbe_date_certifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isiso9000_certNull() {
                return this.IsNull(this.tableMBE.iso9000_certColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setiso9000_certNull() {
                this[this.tableMBE.iso9000_certColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_parent_companyNull() {
                return this.IsNull(this.tableMBE.mbe_parent_companyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_parent_companyNull() {
                this[this.tableMBE.mbe_parent_companyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_recert_date1Null() {
                return this.IsNull(this.tableMBE.mbe_recert_date1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_recert_date1Null() {
                this[this.tableMBE.mbe_recert_date1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_recert_date2Null() {
                return this.IsNull(this.tableMBE.mbe_recert_date2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_recert_date2Null() {
                this[this.tableMBE.mbe_recert_date2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_recert_date3Null() {
                return this.IsNull(this.tableMBE.mbe_recert_date3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_recert_date3Null() {
                this[this.tableMBE.mbe_recert_date3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_recert_date4Null() {
                return this.IsNull(this.tableMBE.mbe_recert_date4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_recert_date4Null() {
                this[this.tableMBE.mbe_recert_date4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_minority_emp_countNull() {
                return this.IsNull(this.tableMBE.mbe_minority_emp_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_minority_emp_countNull() {
                this[this.tableMBE.mbe_minority_emp_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_gross_annual_saleNull() {
                return this.IsNull(this.tableMBE.mbe_gross_annual_saleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_gross_annual_saleNull() {
                this[this.tableMBE.mbe_gross_annual_saleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_geographical_mrktNull() {
                return this.IsNull(this.tableMBE.mbe_geographical_mrktColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_geographical_mrktNull() {
                this[this.tableMBE.mbe_geographical_mrktColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_HUB_zoneNull() {
                return this.IsNull(this.tableMBE.mbe_HUB_zoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_HUB_zoneNull() {
                this[this.tableMBE.mbe_HUB_zoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMSDC_codeNull() {
                return this.IsNull(this.tableMBE.RMSDC_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMSDC_codeNull() {
                this[this.tableMBE.RMSDC_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_legal_structureNull() {
                return this.IsNull(this.tableMBE.mbe_legal_structureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_legal_structureNull() {
                this[this.tableMBE.mbe_legal_structureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_owner_salutationNull() {
                return this.IsNull(this.tableMBE.mbe_owner_salutationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_owner_salutationNull() {
                this[this.tableMBE.mbe_owner_salutationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismajor_customerNull() {
                return this.IsNull(this.tableMBE.major_customerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmajor_customerNull() {
                this[this.tableMBE.major_customerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_owner_titleNull() {
                return this.IsNull(this.tableMBE.mbe_owner_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_owner_titleNull() {
                this[this.tableMBE.mbe_owner_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isowner_LnameNull() {
                return this.IsNull(this.tableMBE.owner_LnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setowner_LnameNull() {
                this[this.tableMBE.owner_LnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isowner_FnameNull() {
                return this.IsNull(this.tableMBE.owner_FnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setowner_FnameNull() {
                this[this.tableMBE.owner_FnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_other_contact_nameNull() {
                return this.IsNull(this.tableMBE.mbe_other_contact_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_other_contact_nameNull() {
                this[this.tableMBE.mbe_other_contact_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_other_contact_titleNull() {
                return this.IsNull(this.tableMBE.mbe_other_contact_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_other_contact_titleNull() {
                this[this.tableMBE.mbe_other_contact_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_8a_certNull() {
                return this.IsNull(this.tableMBE.mbe_8a_certColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_8a_certNull() {
                this[this.tableMBE.mbe_8a_certColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_employee_countNull() {
                return this.IsNull(this.tableMBE.mbe_employee_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_employee_countNull() {
                this[this.tableMBE.mbe_employee_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssubsidiaryNull() {
                return this.IsNull(this.tableMBE.subsidiaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsubsidiaryNull() {
                this[this.tableMBE.subsidiaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isownership_changeNull() {
                return this.IsNull(this.tableMBE.ownership_changeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setownership_changeNull() {
                this[this.tableMBE.ownership_changeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfull_time_emp_countNull() {
                return this.IsNull(this.tableMBE.full_time_emp_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfull_time_emp_countNull() {
                this[this.tableMBE.full_time_emp_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispending_lawsuitNull() {
                return this.IsNull(this.tableMBE.pending_lawsuitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpending_lawsuitNull() {
                this[this.tableMBE.pending_lawsuitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscert_rejection_testNull() {
                return this.IsNull(this.tableMBE.cert_rejection_testColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcert_rejection_testNull() {
                this[this.tableMBE.cert_rejection_testColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankruptcyNull() {
                return this.IsNull(this.tableMBE.bankruptcyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankruptcyNull() {
                this[this.tableMBE.bankruptcyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issubsidiary_testNull() {
                return this.IsNull(this.tableMBE.subsidiary_testColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsubsidiary_testNull() {
                this[this.tableMBE.subsidiary_testColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismember_historyNull() {
                return this.IsNull(this.tableMBE.member_historyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmember_historyNull() {
                this[this.tableMBE.member_historyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_DB_numNull() {
                return this.IsNull(this.tableMBE.mbe_DB_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_DB_numNull() {
                this[this.tableMBE.mbe_DB_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispart_time_emp_countNull() {
                return this.IsNull(this.tableMBE.part_time_emp_countColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpart_time_emp_countNull() {
                this[this.tableMBE.part_time_emp_countColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscert_rejection_reasonNull() {
                return this.IsNull(this.tableMBE.cert_rejection_reasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcert_rejection_reasonNull() {
                this[this.tableMBE.cert_rejection_reasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismethod_of_acquisitionNull() {
                return this.IsNull(this.tableMBE.method_of_acquisitionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmethod_of_acquisitionNull() {
                this[this.tableMBE.method_of_acquisitionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ischeck_numNull() {
                return this.IsNull(this.tableMBE.check_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcheck_numNull() {
                this[this.tableMBE.check_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_home_base_businessNull() {
                return this.IsNull(this.tableMBE.mbe_home_base_businessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_home_base_businessNull() {
                this[this.tableMBE.mbe_home_base_businessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_8a_cert_numNull() {
                return this.IsNull(this.tableMBE.mbe_8a_cert_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_8a_cert_numNull() {
                this[this.tableMBE.mbe_8a_cert_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issinking_fund_numNull() {
                return this.IsNull(this.tableMBE.sinking_fund_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsinking_fund_numNull() {
                this[this.tableMBE.sinking_fund_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_email_subscriptionNull() {
                return this.IsNull(this.tableMBE.mbe_email_subscriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_email_subscriptionNull() {
                this[this.tableMBE.mbe_email_subscriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isiso9001_certNull() {
                return this.IsNull(this.tableMBE.iso9001_certColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setiso9001_certNull() {
                this[this.tableMBE.iso9001_certColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscouncilNull() {
                return this.IsNull(this.tableMBE.councilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcouncilNull() {
                this[this.tableMBE.councilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islocal_regional_councilNull() {
                return this.IsNull(this.tableMBE.local_regional_councilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlocal_regional_councilNull() {
                this[this.tableMBE.local_regional_councilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isiso9002_certNull() {
                return this.IsNull(this.tableMBE.iso9002_certColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setiso9002_certNull() {
                this[this.tableMBE.iso9002_certColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscontract_termination_dateNull() {
                return this.IsNull(this.tableMBE.contract_termination_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcontract_termination_dateNull() {
                this[this.tableMBE.contract_termination_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_employer_SSNNull() {
                return this.IsNull(this.tableMBE.mbe_employer_SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_employer_SSNNull() {
                this[this.tableMBE.mbe_employer_SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isminority_memoNull() {
                return this.IsNull(this.tableMBE.minority_memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setminority_memoNull() {
                this[this.tableMBE.minority_memoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_acquisitionNull() {
                return this.IsNull(this.tableMBE.date_acquisitionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_acquisitionNull() {
                this[this.tableMBE.date_acquisitionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_additional_facilityNull() {
                return this.IsNull(this.tableMBE.mbe_additional_facilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_additional_facilityNull() {
                this[this.tableMBE.mbe_additional_facilityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isminority_classNull() {
                return this.IsNull(this.tableMBE.minority_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setminority_classNull() {
                this[this.tableMBE.minority_classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_cert_expiration_dateNull() {
                return this.IsNull(this.tableMBE.mbe_cert_expiration_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_cert_expiration_dateNull() {
                this[this.tableMBE.mbe_cert_expiration_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_MBEIC_invNull() {
                return this.IsNull(this.tableMBE.mbe_MBEIC_invColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_MBEIC_invNull() {
                this[this.tableMBE.mbe_MBEIC_invColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismbe_other_contact_emailNull() {
                return this.IsNull(this.tableMBE.mbe_other_contact_emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmbe_other_contact_emailNull() {
                this[this.tableMBE.mbe_other_contact_emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherNMSDCCertNull() {
                return this.IsNull(this.tableMBE.otherNMSDCCertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherNMSDCCertNull() {
                this[this.tableMBE.otherNMSDCCertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherNMSDCCertCouncilNull() {
                return this.IsNull(this.tableMBE.otherNMSDCCertCouncilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherNMSDCCertCouncilNull() {
                this[this.tableMBE.otherNMSDCCertCouncilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherNMSDCCertDateNull() {
                return this.IsNull(this.tableMBE.otherNMSDCCertDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherNMSDCCertDateNull() {
                this[this.tableMBE.otherNMSDCCertDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdenyCertNull() {
                return this.IsNull(this.tableMBE.denyCertColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdenyCertNull() {
                this[this.tableMBE.denyCertColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdenyCertCouncilNull() {
                return this.IsNull(this.tableMBE.denyCertCouncilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdenyCertCouncilNull() {
                this[this.tableMBE.denyCertCouncilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdenyCertDateNull() {
                return this.IsNull(this.tableMBE.denyCertDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdenyCertDateNull() {
                this[this.tableMBE.denyCertDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgovtClearNull() {
                return this.IsNull(this.tableMBE.govtClearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgovtClearNull() {
                this[this.tableMBE.govtClearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclearLevelNull() {
                return this.IsNull(this.tableMBE.clearLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclearLevelNull() {
                this[this.tableMBE.clearLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunionAffiliationNull() {
                return this.IsNull(this.tableMBE.unionAffiliationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunionAffiliationNull() {
                this[this.tableMBE.unionAffiliationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbondingNull() {
                return this.IsNull(this.tableMBE.bondingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbondingNull() {
                this[this.tableMBE.bondingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbondingAmountNull() {
                return this.IsNull(this.tableMBE.bondingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbondingAmountNull() {
                this[this.tableMBE.bondingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbondingCompanyNull() {
                return this.IsNull(this.tableMBE.bondingCompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbondingCompanyNull() {
                this[this.tableMBE.bondingCompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssharedResourcesNull() {
                return this.IsNull(this.tableMBE.sharedResourcesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsharedResourcesNull() {
                this[this.tableMBE.sharedResourcesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssharedResourcesDescNull() {
                return this.IsNull(this.tableMBE.sharedResourcesDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsharedResourcesDescNull() {
                this[this.tableMBE.sharedResourcesDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherCompanyNull() {
                return this.IsNull(this.tableMBE.otherCompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherCompanyNull() {
                this[this.tableMBE.otherCompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherCompanyDescNull() {
                return this.IsNull(this.tableMBE.otherCompanyDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherCompanyDescNull() {
                this[this.tableMBE.otherCompanyDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspremisesStatusNull() {
                return this.IsNull(this.tableMBE.premisesStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpremisesStatusNull() {
                this[this.tableMBE.premisesStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsotherAgreementsNull() {
                return this.IsNull(this.tableMBE.otherAgreementsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetotherAgreementsNull() {
                this[this.tableMBE.otherAgreementsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispending_lawsuit_detailsNull() {
                return this.IsNull(this.tableMBE.pending_lawsuit_detailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpending_lawsuit_detailsNull() {
                this[this.tableMBE.pending_lawsuit_detailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbankruptcyDetailsNull() {
                return this.IsNull(this.tableMBE.bankruptcyDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbankruptcyDetailsNull() {
                this[this.tableMBE.bankruptcyDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshistoryNull() {
                return this.IsNull(this.tableMBE.historyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethistoryNull() {
                this[this.tableMBE.historyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmarketingChannelNull() {
                return this.IsNull(this.tableMBE.marketingChannelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmarketingChannelNull() {
                this[this.tableMBE.marketingChannelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsavgDollarValueInvNull() {
                return this.IsNull(this.tableMBE.avgDollarValueInvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetavgDollarValueInvNull() {
                this[this.tableMBE.avgDollarValueInvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscorporatePlusNull() {
                return this.IsNull(this.tableMBE.corporatePlusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcorporatePlusNull() {
                this[this.tableMBE.corporatePlusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspwordNull() {
                return this.IsNull(this.tableMBE.pwordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpwordNull() {
                this[this.tableMBE.pwordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslastDeterminationDateNull() {
                return this.IsNull(this.tableMBE.lastDeterminationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlastDeterminationDateNull() {
                this[this.tableMBE.lastDeterminationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscorpPlusSponsorNull() {
                return this.IsNull(this.tableMBE.corpPlusSponsorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcorpPlusSponsorNull() {
                this[this.tableMBE.corpPlusSponsorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscustomerNatContractsNull() {
                return this.IsNull(this.tableMBE.customerNatContractsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcustomerNatContractsNull() {
                this[this.tableMBE.customerNatContractsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneExtensionNull() {
                return this.IsNull(this.tableMBE.phoneExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneExtensionNull() {
                this[this.tableMBE.phoneExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarksNull() {
                return this.IsNull(this.tableMBE.remarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarksNull() {
                this[this.tableMBE.remarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERow[] GetMBE_GROSS_ANNUAL_SALERows() {
                if ((this.Table.ChildRelations["FK_MBE_GROSS_ANNUAL_SALE_MBE"] == null)) {
                    return new MBE_GROSS_ANNUAL_SALERow[0];
                }
                else {
                    return ((MBE_GROSS_ANNUAL_SALERow[])(base.GetChildRows(this.Table.ChildRelations["FK_MBE_GROSS_ANNUAL_SALE_MBE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MBE_GROSS_ANNUAL_SALERow : global::System.Data.DataRow {
            
            private MBE_GROSS_ANNUAL_SALEDataTable tableMBE_GROSS_ANNUAL_SALE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MBE_GROSS_ANNUAL_SALERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMBE_GROSS_ANNUAL_SALE = ((MBE_GROSS_ANNUAL_SALEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int assc_ID {
                get {
                    return ((int)(this[this.tableMBE_GROSS_ANNUAL_SALE.assc_IDColumn]));
                }
                set {
                    this[this.tableMBE_GROSS_ANNUAL_SALE.assc_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime gross_annual_sale_date {
                get {
                    return ((global::System.DateTime)(this[this.tableMBE_GROSS_ANNUAL_SALE.gross_annual_sale_dateColumn]));
                }
                set {
                    this[this.tableMBE_GROSS_ANNUAL_SALE.gross_annual_sale_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal gross_annual_sale {
                get {
                    try {
                        return ((decimal)(this[this.tableMBE_GROSS_ANNUAL_SALE.gross_annual_saleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gross_annual_sale\' in table \'MBE_GROSS_ANNUAL_SALE\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMBE_GROSS_ANNUAL_SALE.gross_annual_saleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow MBERow {
                get {
                    return ((MBERow)(this.GetParentRow(this.Table.ParentRelations["FK_MBE_GROSS_ANNUAL_SALE_MBE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MBE_GROSS_ANNUAL_SALE_MBE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isgross_annual_saleNull() {
                return this.IsNull(this.tableMBE_GROSS_ANNUAL_SALE.gross_annual_saleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setgross_annual_saleNull() {
                this[this.tableMBE_GROSS_ANNUAL_SALE.gross_annual_saleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STATE_LISTRow : global::System.Data.DataRow {
            
            private STATE_LISTDataTable tableSTATE_LIST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STATE_LISTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTATE_LIST = ((STATE_LISTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    return ((string)(this[this.tableSTATE_LIST.CodeColumn]));
                }
                set {
                    this[this.tableSTATE_LIST.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableSTATE_LIST.NameColumn]));
                }
                set {
                    this[this.tableSTATE_LIST.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow[] GetASSOCIATERows() {
                if ((this.Table.ChildRelations["STATE_LIST_ASSOCIATE"] == null)) {
                    return new ASSOCIATERow[0];
                }
                else {
                    return ((ASSOCIATERow[])(base.GetChildRows(this.Table.ChildRelations["STATE_LIST_ASSOCIATE"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ASSOCIATERowChangeEvent : global::System.EventArgs {
            
            private ASSOCIATERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERowChangeEvent(ASSOCIATERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ASSOCIATERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MBERowChangeEvent : global::System.EventArgs {
            
            private MBERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERowChangeEvent(MBERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MBE_GROSS_ANNUAL_SALERowChangeEvent : global::System.EventArgs {
            
            private MBE_GROSS_ANNUAL_SALERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERowChangeEvent(MBE_GROSS_ANNUAL_SALERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MBE_GROSS_ANNUAL_SALERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STATE_LISTRowChangeEvent : global::System.EventArgs {
            
            private STATE_LISTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRowChangeEvent(STATE_LISTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STATE_LISTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Durados.Web.Mvc.Specifics.Projects.Scmbdc.ScmbdcDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ASSOCIATETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ASSOCIATETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ASSOCIATE";
            tableMapping.ColumnMappings.Add("assc_ID", "assc_ID");
            tableMapping.ColumnMappings.Add("assc_business_name", "assc_business_name");
            tableMapping.ColumnMappings.Add("key_contact_title", "key_contact_title");
            tableMapping.ColumnMappings.Add("key_contact_Fname", "key_contact_Fname");
            tableMapping.ColumnMappings.Add("key_contact_Lname", "key_contact_Lname");
            tableMapping.ColumnMappings.Add("assc_address1", "assc_address1");
            tableMapping.ColumnMappings.Add("assc_address2", "assc_address2");
            tableMapping.ColumnMappings.Add("assc_city", "assc_city");
            tableMapping.ColumnMappings.Add("assc_state", "assc_state");
            tableMapping.ColumnMappings.Add("assc_zipcode", "assc_zipcode");
            tableMapping.ColumnMappings.Add("assc_phone", "assc_phone");
            tableMapping.ColumnMappings.Add("assc_fax_num", "assc_fax_num");
            tableMapping.ColumnMappings.Add("assc_email", "assc_email");
            tableMapping.ColumnMappings.Add("assc_website", "assc_website");
            tableMapping.ColumnMappings.Add("assc_mail_address1", "assc_mail_address1");
            tableMapping.ColumnMappings.Add("assc_mail_address2", "assc_mail_address2");
            tableMapping.ColumnMappings.Add("assc_mail_city", "assc_mail_city");
            tableMapping.ColumnMappings.Add("assc_mail_state", "assc_mail_state");
            tableMapping.ColumnMappings.Add("assc_mail_zipcode", "assc_mail_zipcode");
            tableMapping.ColumnMappings.Add("assc_payment_type", "assc_payment_type");
            tableMapping.ColumnMappings.Add("assc_pdf_filename", "assc_pdf_filename");
            tableMapping.ColumnMappings.Add("assc_date", "assc_date");
            tableMapping.ColumnMappings.Add("assc_status", "assc_status");
            tableMapping.ColumnMappings.Add("assc_fee_amt", "assc_fee_amt");
            tableMapping.ColumnMappings.Add("assc_fee_status", "assc_fee_status");
            tableMapping.ColumnMappings.Add("assc_type", "assc_type");
            tableMapping.ColumnMappings.Add("LastModificationTime", "LastModificationTime");
            tableMapping.ColumnMappings.Add("EntryID", "EntryID");
            tableMapping.ColumnMappings.Add("insurance_inquiry", "insurance_inquiry");
            tableMapping.ColumnMappings.Add("insurance_CA_employees", "insurance_CA_employees");
            tableMapping.ColumnMappings.Add("assc_other_phone", "assc_other_phone");
            tableMapping.ColumnMappings.Add("email_status", "email_status");
            tableMapping.ColumnMappings.Add("email_country", "email_country");
            tableMapping.ColumnMappings.Add("email_LastAttempt", "email_LastAttempt");
            tableMapping.ColumnMappings.Add("email_LastResponse", "email_LastResponse");
            tableMapping.ColumnMappings.Add("email_VerificationResult", "email_VerificationResult");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ASSOCIATE] WHERE (([assc_ID] = @Original_assc_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ASSOCIATE] ([assc_ID], [assc_business_name], [key_contact_title], [key_contact_Fname], [key_contact_Lname], [assc_address1], [assc_address2], [assc_city], [assc_state], [assc_zipcode], [assc_phone], [assc_fax_num], [assc_email], [assc_website], [assc_mail_address1], [assc_mail_address2], [assc_mail_city], [assc_mail_state], [assc_mail_zipcode], [assc_payment_type], [assc_pdf_filename], [assc_date], [assc_status], [assc_fee_amt], [assc_fee_status], [assc_type], [LastModificationTime], [EntryID], [insurance_inquiry], [insurance_CA_employees], [assc_other_phone], [email_status], [email_country], [email_LastAttempt], [email_LastResponse], [email_VerificationResult]) VALUES (@assc_ID, @assc_business_name, @key_contact_title, @key_contact_Fname, @key_contact_Lname, @assc_address1, @assc_address2, @assc_city, @assc_state, @assc_zipcode, @assc_phone, @assc_fax_num, @assc_email, @assc_website, @assc_mail_address1, @assc_mail_address2, @assc_mail_city, @assc_mail_state, @assc_mail_zipcode, @assc_payment_type, @assc_pdf_filename, @assc_date, @assc_status, @assc_fee_amt, @assc_fee_status, @assc_type, @LastModificationTime, @EntryID, @insurance_inquiry, @insurance_CA_employees, @assc_other_phone, @email_status, @email_country, @email_LastAttempt, @email_LastResponse, @email_VerificationResult)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_business_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_business_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@key_contact_title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "key_contact_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@key_contact_Fname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "key_contact_Fname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@key_contact_Lname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "key_contact_Lname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_zipcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_zipcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_fax_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_fax_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_zipcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_zipcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_payment_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_payment_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_pdf_filename", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_pdf_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_fee_amt", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_fee_amt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_fee_status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_fee_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModificationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModificationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_inquiry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_inquiry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_CA_employees", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_CA_employees", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_other_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_other_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_country", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_LastAttempt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_LastAttempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_LastResponse", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_LastResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_VerificationResult", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_VerificationResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ASSOCIATE] SET [assc_ID] = @assc_ID, [assc_business_name] = @assc_business_name, [key_contact_title] = @key_contact_title, [key_contact_Fname] = @key_contact_Fname, [key_contact_Lname] = @key_contact_Lname, [assc_address1] = @assc_address1, [assc_address2] = @assc_address2, [assc_city] = @assc_city, [assc_state] = @assc_state, [assc_zipcode] = @assc_zipcode, [assc_phone] = @assc_phone, [assc_fax_num] = @assc_fax_num, [assc_email] = @assc_email, [assc_website] = @assc_website, [assc_mail_address1] = @assc_mail_address1, [assc_mail_address2] = @assc_mail_address2, [assc_mail_city] = @assc_mail_city, [assc_mail_state] = @assc_mail_state, [assc_mail_zipcode] = @assc_mail_zipcode, [assc_payment_type] = @assc_payment_type, [assc_pdf_filename] = @assc_pdf_filename, [assc_date] = @assc_date, [assc_status] = @assc_status, [assc_fee_amt] = @assc_fee_amt, [assc_fee_status] = @assc_fee_status, [assc_type] = @assc_type, [LastModificationTime] = @LastModificationTime, [EntryID] = @EntryID, [insurance_inquiry] = @insurance_inquiry, [insurance_CA_employees] = @insurance_CA_employees, [assc_other_phone] = @assc_other_phone, [email_status] = @email_status, [email_country] = @email_country, [email_LastAttempt] = @email_LastAttempt, [email_LastResponse] = @email_LastResponse, [email_VerificationResult] = @email_VerificationResult WHERE (([assc_ID] = @Original_assc_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_business_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_business_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@key_contact_title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "key_contact_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@key_contact_Fname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "key_contact_Fname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@key_contact_Lname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "key_contact_Lname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_zipcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_zipcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_fax_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_fax_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_mail_zipcode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_mail_zipcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_payment_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_payment_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_pdf_filename", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_pdf_filename", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_fee_amt", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_fee_amt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_fee_status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_fee_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastModificationTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastModificationTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_inquiry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_inquiry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_CA_employees", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_CA_employees", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_other_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_other_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_country", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_country", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_LastAttempt", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_LastAttempt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_LastResponse", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_LastResponse", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_VerificationResult", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_VerificationResult", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["scmbdcConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT assc_ID, assc_business_name, key_contact_title, key_contact_Fname, key_contact_Lname, assc_address1, assc_address2, assc_city, assc_state, assc_zipcode, assc_phone, assc_fax_num, assc_email, assc_website, assc_mail_address1, assc_mail_address2, assc_mail_city, assc_mail_state, assc_mail_zipcode, assc_payment_type, assc_pdf_filename, assc_date, assc_status, assc_fee_amt, assc_fee_status, assc_type, LastModificationTime, EntryID, insurance_inquiry, insurance_CA_employees, assc_other_phone, email_status, email_country, email_LastAttempt, email_LastResponse, email_VerificationResult FROM dbo.ASSOCIATE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScmbdcDataSet.ASSOCIATEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScmbdcDataSet.ASSOCIATEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScmbdcDataSet.ASSOCIATEDataTable dataTable = new ScmbdcDataSet.ASSOCIATEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet.ASSOCIATEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ASSOCIATE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_assc_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_assc_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int assc_ID, 
                    string assc_business_name, 
                    string key_contact_title, 
                    string key_contact_Fname, 
                    string key_contact_Lname, 
                    string assc_address1, 
                    string assc_address2, 
                    string assc_city, 
                    string assc_state, 
                    string assc_zipcode, 
                    string assc_phone, 
                    string assc_fax_num, 
                    string assc_email, 
                    string assc_website, 
                    string assc_mail_address1, 
                    string assc_mail_address2, 
                    string assc_mail_city, 
                    string assc_mail_state, 
                    string assc_mail_zipcode, 
                    string assc_payment_type, 
                    string assc_pdf_filename, 
                    global::System.Nullable<global::System.DateTime> assc_date, 
                    string assc_status, 
                    global::System.Nullable<decimal> assc_fee_amt, 
                    string assc_fee_status, 
                    string assc_type, 
                    global::System.Nullable<global::System.DateTime> LastModificationTime, 
                    string EntryID, 
                    global::System.Nullable<bool> insurance_inquiry, 
                    global::System.Nullable<int> insurance_CA_employees, 
                    string assc_other_phone, 
                    global::System.Nullable<int> email_status, 
                    string email_country, 
                    global::System.Nullable<global::System.DateTime> email_LastAttempt, 
                    string email_LastResponse, 
                    string email_VerificationResult) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(assc_ID));
            if ((assc_business_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(assc_business_name));
            }
            if ((key_contact_title == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(key_contact_title));
            }
            if ((key_contact_Fname == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(key_contact_Fname));
            }
            if ((key_contact_Lname == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(key_contact_Lname));
            }
            if ((assc_address1 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(assc_address1));
            }
            if ((assc_address2 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(assc_address2));
            }
            if ((assc_city == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(assc_city));
            }
            if ((assc_state == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(assc_state));
            }
            if ((assc_zipcode == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(assc_zipcode));
            }
            if ((assc_phone == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(assc_phone));
            }
            if ((assc_fax_num == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(assc_fax_num));
            }
            if ((assc_email == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(assc_email));
            }
            if ((assc_website == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(assc_website));
            }
            if ((assc_mail_address1 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(assc_mail_address1));
            }
            if ((assc_mail_address2 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(assc_mail_address2));
            }
            if ((assc_mail_city == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(assc_mail_city));
            }
            if ((assc_mail_state == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(assc_mail_state));
            }
            if ((assc_mail_zipcode == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(assc_mail_zipcode));
            }
            if ((assc_payment_type == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(assc_payment_type));
            }
            if ((assc_pdf_filename == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(assc_pdf_filename));
            }
            if ((assc_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(assc_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((assc_status == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(assc_status));
            }
            if ((assc_fee_amt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(assc_fee_amt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((assc_fee_status == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(assc_fee_status));
            }
            if ((assc_type == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(assc_type));
            }
            if ((LastModificationTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(LastModificationTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((EntryID == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(EntryID));
            }
            if ((insurance_inquiry.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(insurance_inquiry.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((insurance_CA_employees.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(insurance_CA_employees.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((assc_other_phone == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(assc_other_phone));
            }
            if ((email_status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(email_status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((email_country == null)) {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(email_country));
            }
            if ((email_LastAttempt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(email_LastAttempt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((email_LastResponse == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(email_LastResponse));
            }
            if ((email_VerificationResult == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(email_VerificationResult));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int assc_ID, 
                    string assc_business_name, 
                    string key_contact_title, 
                    string key_contact_Fname, 
                    string key_contact_Lname, 
                    string assc_address1, 
                    string assc_address2, 
                    string assc_city, 
                    string assc_state, 
                    string assc_zipcode, 
                    string assc_phone, 
                    string assc_fax_num, 
                    string assc_email, 
                    string assc_website, 
                    string assc_mail_address1, 
                    string assc_mail_address2, 
                    string assc_mail_city, 
                    string assc_mail_state, 
                    string assc_mail_zipcode, 
                    string assc_payment_type, 
                    string assc_pdf_filename, 
                    global::System.Nullable<global::System.DateTime> assc_date, 
                    string assc_status, 
                    global::System.Nullable<decimal> assc_fee_amt, 
                    string assc_fee_status, 
                    string assc_type, 
                    global::System.Nullable<global::System.DateTime> LastModificationTime, 
                    string EntryID, 
                    global::System.Nullable<bool> insurance_inquiry, 
                    global::System.Nullable<int> insurance_CA_employees, 
                    string assc_other_phone, 
                    global::System.Nullable<int> email_status, 
                    string email_country, 
                    global::System.Nullable<global::System.DateTime> email_LastAttempt, 
                    string email_LastResponse, 
                    string email_VerificationResult, 
                    int Original_assc_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(assc_ID));
            if ((assc_business_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(assc_business_name));
            }
            if ((key_contact_title == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(key_contact_title));
            }
            if ((key_contact_Fname == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(key_contact_Fname));
            }
            if ((key_contact_Lname == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(key_contact_Lname));
            }
            if ((assc_address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(assc_address1));
            }
            if ((assc_address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(assc_address2));
            }
            if ((assc_city == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(assc_city));
            }
            if ((assc_state == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(assc_state));
            }
            if ((assc_zipcode == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(assc_zipcode));
            }
            if ((assc_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(assc_phone));
            }
            if ((assc_fax_num == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(assc_fax_num));
            }
            if ((assc_email == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(assc_email));
            }
            if ((assc_website == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(assc_website));
            }
            if ((assc_mail_address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(assc_mail_address1));
            }
            if ((assc_mail_address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(assc_mail_address2));
            }
            if ((assc_mail_city == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(assc_mail_city));
            }
            if ((assc_mail_state == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(assc_mail_state));
            }
            if ((assc_mail_zipcode == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(assc_mail_zipcode));
            }
            if ((assc_payment_type == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(assc_payment_type));
            }
            if ((assc_pdf_filename == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(assc_pdf_filename));
            }
            if ((assc_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(assc_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((assc_status == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(assc_status));
            }
            if ((assc_fee_amt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(assc_fee_amt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((assc_fee_status == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(assc_fee_status));
            }
            if ((assc_type == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(assc_type));
            }
            if ((LastModificationTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(LastModificationTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((EntryID == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(EntryID));
            }
            if ((insurance_inquiry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(insurance_inquiry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((insurance_CA_employees.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(insurance_CA_employees.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((assc_other_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(assc_other_phone));
            }
            if ((email_status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(email_status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((email_country == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(email_country));
            }
            if ((email_LastAttempt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(email_LastAttempt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((email_LastResponse == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(email_LastResponse));
            }
            if ((email_VerificationResult == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(email_VerificationResult));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_assc_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string assc_business_name, 
                    string key_contact_title, 
                    string key_contact_Fname, 
                    string key_contact_Lname, 
                    string assc_address1, 
                    string assc_address2, 
                    string assc_city, 
                    string assc_state, 
                    string assc_zipcode, 
                    string assc_phone, 
                    string assc_fax_num, 
                    string assc_email, 
                    string assc_website, 
                    string assc_mail_address1, 
                    string assc_mail_address2, 
                    string assc_mail_city, 
                    string assc_mail_state, 
                    string assc_mail_zipcode, 
                    string assc_payment_type, 
                    string assc_pdf_filename, 
                    global::System.Nullable<global::System.DateTime> assc_date, 
                    string assc_status, 
                    global::System.Nullable<decimal> assc_fee_amt, 
                    string assc_fee_status, 
                    string assc_type, 
                    global::System.Nullable<global::System.DateTime> LastModificationTime, 
                    string EntryID, 
                    global::System.Nullable<bool> insurance_inquiry, 
                    global::System.Nullable<int> insurance_CA_employees, 
                    string assc_other_phone, 
                    global::System.Nullable<int> email_status, 
                    string email_country, 
                    global::System.Nullable<global::System.DateTime> email_LastAttempt, 
                    string email_LastResponse, 
                    string email_VerificationResult, 
                    int Original_assc_ID) {
            return this.Update(Original_assc_ID, assc_business_name, key_contact_title, key_contact_Fname, key_contact_Lname, assc_address1, assc_address2, assc_city, assc_state, assc_zipcode, assc_phone, assc_fax_num, assc_email, assc_website, assc_mail_address1, assc_mail_address2, assc_mail_city, assc_mail_state, assc_mail_zipcode, assc_payment_type, assc_pdf_filename, assc_date, assc_status, assc_fee_amt, assc_fee_status, assc_type, LastModificationTime, EntryID, insurance_inquiry, insurance_CA_employees, assc_other_phone, email_status, email_country, email_LastAttempt, email_LastResponse, email_VerificationResult, Original_assc_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MBETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MBETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MBE";
            tableMapping.ColumnMappings.Add("assc_ID", "assc_ID");
            tableMapping.ColumnMappings.Add("mbe_cert_num", "mbe_cert_num");
            tableMapping.ColumnMappings.Add("council_ID_num", "council_ID_num");
            tableMapping.ColumnMappings.Add("mbe_business_type", "mbe_business_type");
            tableMapping.ColumnMappings.Add("mbe_business_product_service", "mbe_business_product_service");
            tableMapping.ColumnMappings.Add("mbe_other_cert", "mbe_other_cert");
            tableMapping.ColumnMappings.Add("mbe_federal_IRS_num", "mbe_federal_IRS_num");
            tableMapping.ColumnMappings.Add("mbe_business_establish_date", "mbe_business_establish_date");
            tableMapping.ColumnMappings.Add("mbe_date_certified", "mbe_date_certified");
            tableMapping.ColumnMappings.Add("iso9000_cert", "iso9000_cert");
            tableMapping.ColumnMappings.Add("mbe_parent_company", "mbe_parent_company");
            tableMapping.ColumnMappings.Add("mbe_recert_date1", "mbe_recert_date1");
            tableMapping.ColumnMappings.Add("mbe_recert_date2", "mbe_recert_date2");
            tableMapping.ColumnMappings.Add("mbe_recert_date3", "mbe_recert_date3");
            tableMapping.ColumnMappings.Add("mbe_recert_date4", "mbe_recert_date4");
            tableMapping.ColumnMappings.Add("mbe_minority_emp_count", "mbe_minority_emp_count");
            tableMapping.ColumnMappings.Add("mbe_gross_annual_sale", "mbe_gross_annual_sale");
            tableMapping.ColumnMappings.Add("mbe_geographical_mrkt", "mbe_geographical_mrkt");
            tableMapping.ColumnMappings.Add("mbe_HUB_zone", "mbe_HUB_zone");
            tableMapping.ColumnMappings.Add("RMSDC_code", "RMSDC_code");
            tableMapping.ColumnMappings.Add("mbe_legal_structure", "mbe_legal_structure");
            tableMapping.ColumnMappings.Add("mbe_owner_salutation", "mbe_owner_salutation");
            tableMapping.ColumnMappings.Add("major_customer", "major_customer");
            tableMapping.ColumnMappings.Add("mbe_owner_title", "mbe_owner_title");
            tableMapping.ColumnMappings.Add("owner_Lname", "owner_Lname");
            tableMapping.ColumnMappings.Add("owner_Fname", "owner_Fname");
            tableMapping.ColumnMappings.Add("mbe_other_contact_name", "mbe_other_contact_name");
            tableMapping.ColumnMappings.Add("mbe_other_contact_title", "mbe_other_contact_title");
            tableMapping.ColumnMappings.Add("mbe_8a_cert", "mbe_8a_cert");
            tableMapping.ColumnMappings.Add("mbe_employee_count", "mbe_employee_count");
            tableMapping.ColumnMappings.Add("subsidiary", "subsidiary");
            tableMapping.ColumnMappings.Add("ownership_change", "ownership_change");
            tableMapping.ColumnMappings.Add("full_time_emp_count", "full_time_emp_count");
            tableMapping.ColumnMappings.Add("pending_lawsuit", "pending_lawsuit");
            tableMapping.ColumnMappings.Add("cert_rejection_test", "cert_rejection_test");
            tableMapping.ColumnMappings.Add("bankruptcy", "bankruptcy");
            tableMapping.ColumnMappings.Add("subsidiary_test", "subsidiary_test");
            tableMapping.ColumnMappings.Add("member_history", "member_history");
            tableMapping.ColumnMappings.Add("mbe_DB_num", "mbe_DB_num");
            tableMapping.ColumnMappings.Add("part_time_emp_count", "part_time_emp_count");
            tableMapping.ColumnMappings.Add("cert_rejection_reason", "cert_rejection_reason");
            tableMapping.ColumnMappings.Add("method_of_acquisition", "method_of_acquisition");
            tableMapping.ColumnMappings.Add("check_num", "check_num");
            tableMapping.ColumnMappings.Add("mbe_home_base_business", "mbe_home_base_business");
            tableMapping.ColumnMappings.Add("mbe_8a_cert_num", "mbe_8a_cert_num");
            tableMapping.ColumnMappings.Add("sinking_fund_num", "sinking_fund_num");
            tableMapping.ColumnMappings.Add("mbe_email_subscription", "mbe_email_subscription");
            tableMapping.ColumnMappings.Add("iso9001_cert", "iso9001_cert");
            tableMapping.ColumnMappings.Add("council", "council");
            tableMapping.ColumnMappings.Add("local_regional_council", "local_regional_council");
            tableMapping.ColumnMappings.Add("iso9002_cert", "iso9002_cert");
            tableMapping.ColumnMappings.Add("contract_termination_date", "contract_termination_date");
            tableMapping.ColumnMappings.Add("mbe_employer_SSN", "mbe_employer_SSN");
            tableMapping.ColumnMappings.Add("minority_memo", "minority_memo");
            tableMapping.ColumnMappings.Add("date_acquisition", "date_acquisition");
            tableMapping.ColumnMappings.Add("mbe_additional_facility", "mbe_additional_facility");
            tableMapping.ColumnMappings.Add("minority_class", "minority_class");
            tableMapping.ColumnMappings.Add("mbe_cert_expiration_date", "mbe_cert_expiration_date");
            tableMapping.ColumnMappings.Add("mbe_MBEIC_inv", "mbe_MBEIC_inv");
            tableMapping.ColumnMappings.Add("mbe_other_contact_email", "mbe_other_contact_email");
            tableMapping.ColumnMappings.Add("otherNMSDCCert", "otherNMSDCCert");
            tableMapping.ColumnMappings.Add("otherNMSDCCertCouncil", "otherNMSDCCertCouncil");
            tableMapping.ColumnMappings.Add("otherNMSDCCertDate", "otherNMSDCCertDate");
            tableMapping.ColumnMappings.Add("denyCert", "denyCert");
            tableMapping.ColumnMappings.Add("denyCertCouncil", "denyCertCouncil");
            tableMapping.ColumnMappings.Add("denyCertDate", "denyCertDate");
            tableMapping.ColumnMappings.Add("govtClear", "govtClear");
            tableMapping.ColumnMappings.Add("clearLevel", "clearLevel");
            tableMapping.ColumnMappings.Add("unionAffiliation", "unionAffiliation");
            tableMapping.ColumnMappings.Add("bonding", "bonding");
            tableMapping.ColumnMappings.Add("bondingAmount", "bondingAmount");
            tableMapping.ColumnMappings.Add("bondingCompany", "bondingCompany");
            tableMapping.ColumnMappings.Add("sharedResources", "sharedResources");
            tableMapping.ColumnMappings.Add("sharedResourcesDesc", "sharedResourcesDesc");
            tableMapping.ColumnMappings.Add("otherCompany", "otherCompany");
            tableMapping.ColumnMappings.Add("otherCompanyDesc", "otherCompanyDesc");
            tableMapping.ColumnMappings.Add("premisesStatus", "premisesStatus");
            tableMapping.ColumnMappings.Add("otherAgreements", "otherAgreements");
            tableMapping.ColumnMappings.Add("pending_lawsuit_details", "pending_lawsuit_details");
            tableMapping.ColumnMappings.Add("bankruptcyDetails", "bankruptcyDetails");
            tableMapping.ColumnMappings.Add("history", "history");
            tableMapping.ColumnMappings.Add("marketingChannel", "marketingChannel");
            tableMapping.ColumnMappings.Add("avgDollarValueInv", "avgDollarValueInv");
            tableMapping.ColumnMappings.Add("corporatePlus", "corporatePlus");
            tableMapping.ColumnMappings.Add("pword", "pword");
            tableMapping.ColumnMappings.Add("lastDeterminationDate", "lastDeterminationDate");
            tableMapping.ColumnMappings.Add("corpPlusSponsor", "corpPlusSponsor");
            tableMapping.ColumnMappings.Add("customerNatContracts", "customerNatContracts");
            tableMapping.ColumnMappings.Add("phoneExtension", "phoneExtension");
            tableMapping.ColumnMappings.Add("remarks", "remarks");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MBE] WHERE (([assc_ID] = @Original_assc_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MBE] ([assc_ID], [mbe_cert_num], [council_ID_num], [mbe_busine" +
                "ss_type], [mbe_business_product_service], [mbe_other_cert], [mbe_federal_IRS_num" +
                "], [mbe_business_establish_date], [mbe_date_certified], [iso9000_cert], [mbe_par" +
                "ent_company], [mbe_recert_date1], [mbe_recert_date2], [mbe_recert_date3], [mbe_r" +
                "ecert_date4], [mbe_minority_emp_count], [mbe_gross_annual_sale], [mbe_geographic" +
                "al_mrkt], [mbe_HUB_zone], [RMSDC_code], [mbe_legal_structure], [mbe_owner_saluta" +
                "tion], [major_customer], [mbe_owner_title], [owner_Lname], [owner_Fname], [mbe_o" +
                "ther_contact_name], [mbe_other_contact_title], [mbe_8a_cert], [mbe_employee_coun" +
                "t], [subsidiary], [ownership_change], [full_time_emp_count], [pending_lawsuit], " +
                "[cert_rejection_test], [bankruptcy], [subsidiary_test], [member_history], [mbe_D" +
                "B_num], [part_time_emp_count], [cert_rejection_reason], [method_of_acquisition]," +
                " [check_num], [mbe_home_base_business], [mbe_8a_cert_num], [sinking_fund_num], [" +
                "mbe_email_subscription], [iso9001_cert], [council], [local_regional_council], [i" +
                "so9002_cert], [contract_termination_date], [mbe_employer_SSN], [minority_memo], " +
                "[date_acquisition], [mbe_additional_facility], [minority_class], [mbe_cert_expir" +
                "ation_date], [mbe_MBEIC_inv], [mbe_other_contact_email], [otherNMSDCCert], [othe" +
                "rNMSDCCertCouncil], [otherNMSDCCertDate], [denyCert], [denyCertCouncil], [denyCe" +
                "rtDate], [govtClear], [clearLevel], [unionAffiliation], [bonding], [bondingAmoun" +
                "t], [bondingCompany], [sharedResources], [sharedResourcesDesc], [otherCompany], " +
                "[otherCompanyDesc], [premisesStatus], [otherAgreements], [pending_lawsuit_detail" +
                "s], [bankruptcyDetails], [history], [marketingChannel], [avgDollarValueInv], [co" +
                "rporatePlus], [pword], [lastDeterminationDate], [corpPlusSponsor], [customerNatC" +
                "ontracts], [phoneExtension], [remarks]) VALUES (@assc_ID, @mbe_cert_num, @counci" +
                "l_ID_num, @mbe_business_type, @mbe_business_product_service, @mbe_other_cert, @m" +
                "be_federal_IRS_num, @mbe_business_establish_date, @mbe_date_certified, @iso9000_" +
                "cert, @mbe_parent_company, @mbe_recert_date1, @mbe_recert_date2, @mbe_recert_dat" +
                "e3, @mbe_recert_date4, @mbe_minority_emp_count, @mbe_gross_annual_sale, @mbe_geo" +
                "graphical_mrkt, @mbe_HUB_zone, @RMSDC_code, @mbe_legal_structure, @mbe_owner_sal" +
                "utation, @major_customer, @mbe_owner_title, @owner_Lname, @owner_Fname, @mbe_oth" +
                "er_contact_name, @mbe_other_contact_title, @mbe_8a_cert, @mbe_employee_count, @s" +
                "ubsidiary, @ownership_change, @full_time_emp_count, @pending_lawsuit, @cert_reje" +
                "ction_test, @bankruptcy, @subsidiary_test, @member_history, @mbe_DB_num, @part_t" +
                "ime_emp_count, @cert_rejection_reason, @method_of_acquisition, @check_num, @mbe_" +
                "home_base_business, @mbe_8a_cert_num, @sinking_fund_num, @mbe_email_subscription" +
                ", @iso9001_cert, @council, @local_regional_council, @iso9002_cert, @contract_ter" +
                "mination_date, @mbe_employer_SSN, @minority_memo, @date_acquisition, @mbe_additi" +
                "onal_facility, @minority_class, @mbe_cert_expiration_date, @mbe_MBEIC_inv, @mbe_" +
                "other_contact_email, @otherNMSDCCert, @otherNMSDCCertCouncil, @otherNMSDCCertDat" +
                "e, @denyCert, @denyCertCouncil, @denyCertDate, @govtClear, @clearLevel, @unionAf" +
                "filiation, @bonding, @bondingAmount, @bondingCompany, @sharedResources, @sharedR" +
                "esourcesDesc, @otherCompany, @otherCompanyDesc, @premisesStatus, @otherAgreement" +
                "s, @pending_lawsuit_details, @bankruptcyDetails, @history, @marketingChannel, @a" +
                "vgDollarValueInv, @corporatePlus, @pword, @lastDeterminationDate, @corpPlusSpons" +
                "or, @customerNatContracts, @phoneExtension, @remarks)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_cert_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_cert_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@council_ID_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "council_ID_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_business_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_business_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_business_product_service", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_business_product_service", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_cert", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_federal_IRS_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_federal_IRS_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_business_establish_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_business_establish_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_date_certified", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_date_certified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iso9000_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iso9000_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_parent_company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_parent_company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date1", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date2", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date3", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date4", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_minority_emp_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_minority_emp_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_gross_annual_sale", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_gross_annual_sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_geographical_mrkt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_geographical_mrkt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_HUB_zone", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_HUB_zone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMSDC_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSDC_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_legal_structure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_legal_structure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_owner_salutation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_owner_salutation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@major_customer", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "major_customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_owner_title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_owner_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@owner_Lname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner_Lname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@owner_Fname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner_Fname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_contact_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_contact_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_contact_title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_contact_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_8a_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_8a_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_employee_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_employee_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subsidiary", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subsidiary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ownership_change", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ownership_change", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@full_time_emp_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_time_emp_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pending_lawsuit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pending_lawsuit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cert_rejection_test", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cert_rejection_test", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bankruptcy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bankruptcy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subsidiary_test", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subsidiary_test", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@member_history", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "member_history", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_DB_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_DB_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@part_time_emp_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "part_time_emp_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cert_rejection_reason", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cert_rejection_reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@method_of_acquisition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "method_of_acquisition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@check_num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "check_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_home_base_business", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_home_base_business", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_8a_cert_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_8a_cert_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sinking_fund_num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sinking_fund_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_email_subscription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_email_subscription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iso9001_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iso9001_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@council", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "council", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@local_regional_council", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "local_regional_council", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iso9002_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iso9002_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contract_termination_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contract_termination_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_employer_SSN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_employer_SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minority_memo", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "minority_memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date_acquisition", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_acquisition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_additional_facility", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_additional_facility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minority_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "minority_class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_cert_expiration_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_cert_expiration_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_MBEIC_inv", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_MBEIC_inv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_contact_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_contact_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherNMSDCCert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherNMSDCCert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherNMSDCCertCouncil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherNMSDCCertCouncil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherNMSDCCertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherNMSDCCertDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@denyCert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "denyCert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@denyCertCouncil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "denyCertCouncil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@denyCertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "denyCertDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@govtClear", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "govtClear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clearLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clearLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unionAffiliation", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unionAffiliation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bonding", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bonding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bondingAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bondingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bondingCompany", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bondingCompany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sharedResources", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sharedResources", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sharedResourcesDesc", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sharedResourcesDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherCompany", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherCompany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherCompanyDesc", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherCompanyDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@premisesStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "premisesStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherAgreements", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherAgreements", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pending_lawsuit_details", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pending_lawsuit_details", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bankruptcyDetails", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bankruptcyDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@history", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "history", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@marketingChannel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "marketingChannel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@avgDollarValueInv", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "avgDollarValueInv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@corporatePlus", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "corporatePlus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastDeterminationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastDeterminationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@corpPlusSponsor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "corpPlusSponsor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerNatContracts", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerNatContracts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phoneExtension", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneExtension", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remarks", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[MBE] SET [assc_ID] = @assc_ID, [mbe_cert_num] = @mbe_cert_num, [cou" +
                "ncil_ID_num] = @council_ID_num, [mbe_business_type] = @mbe_business_type, [mbe_b" +
                "usiness_product_service] = @mbe_business_product_service, [mbe_other_cert] = @mb" +
                "e_other_cert, [mbe_federal_IRS_num] = @mbe_federal_IRS_num, [mbe_business_establ" +
                "ish_date] = @mbe_business_establish_date, [mbe_date_certified] = @mbe_date_certi" +
                "fied, [iso9000_cert] = @iso9000_cert, [mbe_parent_company] = @mbe_parent_company" +
                ", [mbe_recert_date1] = @mbe_recert_date1, [mbe_recert_date2] = @mbe_recert_date2" +
                ", [mbe_recert_date3] = @mbe_recert_date3, [mbe_recert_date4] = @mbe_recert_date4" +
                ", [mbe_minority_emp_count] = @mbe_minority_emp_count, [mbe_gross_annual_sale] = " +
                "@mbe_gross_annual_sale, [mbe_geographical_mrkt] = @mbe_geographical_mrkt, [mbe_H" +
                "UB_zone] = @mbe_HUB_zone, [RMSDC_code] = @RMSDC_code, [mbe_legal_structure] = @m" +
                "be_legal_structure, [mbe_owner_salutation] = @mbe_owner_salutation, [major_custo" +
                "mer] = @major_customer, [mbe_owner_title] = @mbe_owner_title, [owner_Lname] = @o" +
                "wner_Lname, [owner_Fname] = @owner_Fname, [mbe_other_contact_name] = @mbe_other_" +
                "contact_name, [mbe_other_contact_title] = @mbe_other_contact_title, [mbe_8a_cert" +
                "] = @mbe_8a_cert, [mbe_employee_count] = @mbe_employee_count, [subsidiary] = @su" +
                "bsidiary, [ownership_change] = @ownership_change, [full_time_emp_count] = @full_" +
                "time_emp_count, [pending_lawsuit] = @pending_lawsuit, [cert_rejection_test] = @c" +
                "ert_rejection_test, [bankruptcy] = @bankruptcy, [subsidiary_test] = @subsidiary_" +
                "test, [member_history] = @member_history, [mbe_DB_num] = @mbe_DB_num, [part_time" +
                "_emp_count] = @part_time_emp_count, [cert_rejection_reason] = @cert_rejection_re" +
                "ason, [method_of_acquisition] = @method_of_acquisition, [check_num] = @check_num" +
                ", [mbe_home_base_business] = @mbe_home_base_business, [mbe_8a_cert_num] = @mbe_8" +
                "a_cert_num, [sinking_fund_num] = @sinking_fund_num, [mbe_email_subscription] = @" +
                "mbe_email_subscription, [iso9001_cert] = @iso9001_cert, [council] = @council, [l" +
                "ocal_regional_council] = @local_regional_council, [iso9002_cert] = @iso9002_cert" +
                ", [contract_termination_date] = @contract_termination_date, [mbe_employer_SSN] =" +
                " @mbe_employer_SSN, [minority_memo] = @minority_memo, [date_acquisition] = @date" +
                "_acquisition, [mbe_additional_facility] = @mbe_additional_facility, [minority_cl" +
                "ass] = @minority_class, [mbe_cert_expiration_date] = @mbe_cert_expiration_date, " +
                "[mbe_MBEIC_inv] = @mbe_MBEIC_inv, [mbe_other_contact_email] = @mbe_other_contact" +
                "_email, [otherNMSDCCert] = @otherNMSDCCert, [otherNMSDCCertCouncil] = @otherNMSD" +
                "CCertCouncil, [otherNMSDCCertDate] = @otherNMSDCCertDate, [denyCert] = @denyCert" +
                ", [denyCertCouncil] = @denyCertCouncil, [denyCertDate] = @denyCertDate, [govtCle" +
                "ar] = @govtClear, [clearLevel] = @clearLevel, [unionAffiliation] = @unionAffilia" +
                "tion, [bonding] = @bonding, [bondingAmount] = @bondingAmount, [bondingCompany] =" +
                " @bondingCompany, [sharedResources] = @sharedResources, [sharedResourcesDesc] = " +
                "@sharedResourcesDesc, [otherCompany] = @otherCompany, [otherCompanyDesc] = @othe" +
                "rCompanyDesc, [premisesStatus] = @premisesStatus, [otherAgreements] = @otherAgre" +
                "ements, [pending_lawsuit_details] = @pending_lawsuit_details, [bankruptcyDetails" +
                "] = @bankruptcyDetails, [history] = @history, [marketingChannel] = @marketingCha" +
                "nnel, [avgDollarValueInv] = @avgDollarValueInv, [corporatePlus] = @corporatePlus" +
                ", [pword] = @pword, [lastDeterminationDate] = @lastDeterminationDate, [corpPlusS" +
                "ponsor] = @corpPlusSponsor, [customerNatContracts] = @customerNatContracts, [pho" +
                "neExtension] = @phoneExtension, [remarks] = @remarks WHERE (([assc_ID] = @Origin" +
                "al_assc_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_cert_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_cert_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@council_ID_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "council_ID_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_business_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_business_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_business_product_service", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_business_product_service", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_cert", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_federal_IRS_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_federal_IRS_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_business_establish_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_business_establish_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_date_certified", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_date_certified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iso9000_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iso9000_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_parent_company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_parent_company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date1", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date2", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date3", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_recert_date4", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_recert_date4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_minority_emp_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_minority_emp_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_gross_annual_sale", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_gross_annual_sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_geographical_mrkt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_geographical_mrkt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_HUB_zone", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_HUB_zone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMSDC_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSDC_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_legal_structure", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_legal_structure", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_owner_salutation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_owner_salutation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@major_customer", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "major_customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_owner_title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_owner_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@owner_Lname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner_Lname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@owner_Fname", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner_Fname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_contact_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_contact_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_contact_title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_contact_title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_8a_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_8a_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_employee_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_employee_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subsidiary", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subsidiary", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ownership_change", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ownership_change", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@full_time_emp_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_time_emp_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pending_lawsuit", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pending_lawsuit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cert_rejection_test", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cert_rejection_test", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bankruptcy", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bankruptcy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subsidiary_test", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subsidiary_test", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@member_history", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "member_history", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_DB_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_DB_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@part_time_emp_count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "part_time_emp_count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cert_rejection_reason", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cert_rejection_reason", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@method_of_acquisition", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "method_of_acquisition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@check_num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "check_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_home_base_business", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_home_base_business", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_8a_cert_num", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_8a_cert_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sinking_fund_num", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sinking_fund_num", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_email_subscription", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_email_subscription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iso9001_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iso9001_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@council", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "council", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@local_regional_council", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "local_regional_council", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iso9002_cert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "iso9002_cert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contract_termination_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contract_termination_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_employer_SSN", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_employer_SSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minority_memo", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "minority_memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date_acquisition", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_acquisition", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_additional_facility", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_additional_facility", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minority_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "minority_class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_cert_expiration_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_cert_expiration_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_MBEIC_inv", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_MBEIC_inv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@mbe_other_contact_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "mbe_other_contact_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherNMSDCCert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherNMSDCCert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherNMSDCCertCouncil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherNMSDCCertCouncil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherNMSDCCertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherNMSDCCertDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@denyCert", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "denyCert", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@denyCertCouncil", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "denyCertCouncil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@denyCertDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "denyCertDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@govtClear", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "govtClear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@clearLevel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "clearLevel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unionAffiliation", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unionAffiliation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bonding", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bonding", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bondingAmount", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bondingAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bondingCompany", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bondingCompany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sharedResources", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sharedResources", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sharedResourcesDesc", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sharedResourcesDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherCompany", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherCompany", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherCompanyDesc", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherCompanyDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@premisesStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "premisesStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@otherAgreements", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "otherAgreements", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pending_lawsuit_details", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pending_lawsuit_details", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bankruptcyDetails", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bankruptcyDetails", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@history", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "history", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@marketingChannel", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "marketingChannel", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@avgDollarValueInv", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "avgDollarValueInv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@corporatePlus", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "corporatePlus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "pword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lastDeterminationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "lastDeterminationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@corpPlusSponsor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "corpPlusSponsor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerNatContracts", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerNatContracts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phoneExtension", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneExtension", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@remarks", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "remarks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["scmbdcConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT assc_ID, mbe_cert_num, council_ID_num, mbe_business_type, mbe_business_pro" +
                "duct_service, mbe_other_cert, mbe_federal_IRS_num, mbe_business_establish_date, " +
                "mbe_date_certified, iso9000_cert, mbe_parent_company, mbe_recert_date1, mbe_rece" +
                "rt_date2, mbe_recert_date3, mbe_recert_date4, mbe_minority_emp_count, mbe_gross_" +
                "annual_sale, mbe_geographical_mrkt, mbe_HUB_zone, RMSDC_code, mbe_legal_structur" +
                "e, mbe_owner_salutation, major_customer, mbe_owner_title, owner_Lname, owner_Fna" +
                "me, mbe_other_contact_name, mbe_other_contact_title, mbe_8a_cert, mbe_employee_c" +
                "ount, subsidiary, ownership_change, full_time_emp_count, pending_lawsuit, cert_r" +
                "ejection_test, bankruptcy, subsidiary_test, member_history, mbe_DB_num, part_tim" +
                "e_emp_count, cert_rejection_reason, method_of_acquisition, check_num, mbe_home_b" +
                "ase_business, mbe_8a_cert_num, sinking_fund_num, mbe_email_subscription, iso9001" +
                "_cert, council, local_regional_council, iso9002_cert, contract_termination_date," +
                " mbe_employer_SSN, minority_memo, date_acquisition, mbe_additional_facility, min" +
                "ority_class, mbe_cert_expiration_date, mbe_MBEIC_inv, mbe_other_contact_email, o" +
                "therNMSDCCert, otherNMSDCCertCouncil, otherNMSDCCertDate, denyCert, denyCertCoun" +
                "cil, denyCertDate, govtClear, clearLevel, unionAffiliation, bonding, bondingAmou" +
                "nt, bondingCompany, sharedResources, sharedResourcesDesc, otherCompany, otherCom" +
                "panyDesc, premisesStatus, otherAgreements, pending_lawsuit_details, bankruptcyDe" +
                "tails, history, marketingChannel, avgDollarValueInv, corporatePlus, pword, lastD" +
                "eterminationDate, corpPlusSponsor, customerNatContracts, phoneExtension, remarks" +
                " FROM dbo.MBE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScmbdcDataSet.MBEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScmbdcDataSet.MBEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScmbdcDataSet.MBEDataTable dataTable = new ScmbdcDataSet.MBEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet.MBEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MBE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_assc_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_assc_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int assc_ID, 
                    string mbe_cert_num, 
                    string council_ID_num, 
                    string mbe_business_type, 
                    string mbe_business_product_service, 
                    string mbe_other_cert, 
                    string mbe_federal_IRS_num, 
                    global::System.Nullable<global::System.DateTime> mbe_business_establish_date, 
                    global::System.Nullable<global::System.DateTime> mbe_date_certified, 
                    global::System.Nullable<bool> iso9000_cert, 
                    string mbe_parent_company, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date1, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date2, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date3, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date4, 
                    global::System.Nullable<int> mbe_minority_emp_count, 
                    global::System.Nullable<decimal> mbe_gross_annual_sale, 
                    string mbe_geographical_mrkt, 
                    global::System.Nullable<bool> mbe_HUB_zone, 
                    string RMSDC_code, 
                    string mbe_legal_structure, 
                    string mbe_owner_salutation, 
                    string major_customer, 
                    string mbe_owner_title, 
                    string owner_Lname, 
                    string owner_Fname, 
                    string mbe_other_contact_name, 
                    string mbe_other_contact_title, 
                    global::System.Nullable<bool> mbe_8a_cert, 
                    global::System.Nullable<int> mbe_employee_count, 
                    string subsidiary, 
                    global::System.Nullable<bool> ownership_change, 
                    global::System.Nullable<int> full_time_emp_count, 
                    global::System.Nullable<bool> pending_lawsuit, 
                    global::System.Nullable<bool> cert_rejection_test, 
                    global::System.Nullable<bool> bankruptcy, 
                    global::System.Nullable<bool> subsidiary_test, 
                    string member_history, 
                    string mbe_DB_num, 
                    global::System.Nullable<int> part_time_emp_count, 
                    string cert_rejection_reason, 
                    string method_of_acquisition, 
                    global::System.Nullable<int> check_num, 
                    global::System.Nullable<bool> mbe_home_base_business, 
                    string mbe_8a_cert_num, 
                    global::System.Nullable<int> sinking_fund_num, 
                    global::System.Nullable<bool> mbe_email_subscription, 
                    global::System.Nullable<bool> iso9001_cert, 
                    string council, 
                    string local_regional_council, 
                    global::System.Nullable<bool> iso9002_cert, 
                    global::System.Nullable<global::System.DateTime> contract_termination_date, 
                    string mbe_employer_SSN, 
                    string minority_memo, 
                    global::System.Nullable<global::System.DateTime> date_acquisition, 
                    string mbe_additional_facility, 
                    string minority_class, 
                    global::System.Nullable<global::System.DateTime> mbe_cert_expiration_date, 
                    global::System.Nullable<bool> mbe_MBEIC_inv, 
                    string mbe_other_contact_email, 
                    global::System.Nullable<bool> otherNMSDCCert, 
                    string otherNMSDCCertCouncil, 
                    global::System.Nullable<global::System.DateTime> otherNMSDCCertDate, 
                    global::System.Nullable<bool> denyCert, 
                    string denyCertCouncil, 
                    global::System.Nullable<global::System.DateTime> denyCertDate, 
                    global::System.Nullable<bool> govtClear, 
                    string clearLevel, 
                    string unionAffiliation, 
                    global::System.Nullable<bool> bonding, 
                    global::System.Nullable<decimal> bondingAmount, 
                    string bondingCompany, 
                    global::System.Nullable<bool> sharedResources, 
                    string sharedResourcesDesc, 
                    global::System.Nullable<bool> otherCompany, 
                    string otherCompanyDesc, 
                    string premisesStatus, 
                    global::System.Nullable<bool> otherAgreements, 
                    string pending_lawsuit_details, 
                    string bankruptcyDetails, 
                    string history, 
                    string marketingChannel, 
                    global::System.Nullable<decimal> avgDollarValueInv, 
                    global::System.Nullable<bool> corporatePlus, 
                    string pword, 
                    global::System.Nullable<global::System.DateTime> lastDeterminationDate, 
                    string corpPlusSponsor, 
                    string customerNatContracts, 
                    global::System.Nullable<int> phoneExtension, 
                    string remarks) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(assc_ID));
            if ((mbe_cert_num == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(mbe_cert_num));
            }
            if ((council_ID_num == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(council_ID_num));
            }
            if ((mbe_business_type == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(mbe_business_type));
            }
            if ((mbe_business_product_service == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(mbe_business_product_service));
            }
            if ((mbe_other_cert == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(mbe_other_cert));
            }
            if ((mbe_federal_IRS_num == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(mbe_federal_IRS_num));
            }
            if ((mbe_business_establish_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(mbe_business_establish_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((mbe_date_certified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(mbe_date_certified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((iso9000_cert.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(iso9000_cert.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((mbe_parent_company == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(mbe_parent_company));
            }
            if ((mbe_recert_date1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(mbe_recert_date1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((mbe_recert_date2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(mbe_recert_date2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((mbe_recert_date3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(mbe_recert_date3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((mbe_recert_date4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(mbe_recert_date4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((mbe_minority_emp_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(mbe_minority_emp_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((mbe_gross_annual_sale.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(mbe_gross_annual_sale.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((mbe_geographical_mrkt == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(mbe_geographical_mrkt));
            }
            if ((mbe_HUB_zone.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(mbe_HUB_zone.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RMSDC_code == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(RMSDC_code));
            }
            if ((mbe_legal_structure == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(mbe_legal_structure));
            }
            if ((mbe_owner_salutation == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(mbe_owner_salutation));
            }
            if ((major_customer == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(major_customer));
            }
            if ((mbe_owner_title == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(mbe_owner_title));
            }
            if ((owner_Lname == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(owner_Lname));
            }
            if ((owner_Fname == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(owner_Fname));
            }
            if ((mbe_other_contact_name == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(mbe_other_contact_name));
            }
            if ((mbe_other_contact_title == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(mbe_other_contact_title));
            }
            if ((mbe_8a_cert.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(mbe_8a_cert.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((mbe_employee_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(mbe_employee_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((subsidiary == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(subsidiary));
            }
            if ((ownership_change.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(ownership_change.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((full_time_emp_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(full_time_emp_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((pending_lawsuit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(pending_lawsuit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((cert_rejection_test.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(cert_rejection_test.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((bankruptcy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(bankruptcy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((subsidiary_test.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(subsidiary_test.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((member_history == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(member_history));
            }
            if ((mbe_DB_num == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(mbe_DB_num));
            }
            if ((part_time_emp_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(part_time_emp_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((cert_rejection_reason == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(cert_rejection_reason));
            }
            if ((method_of_acquisition == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(method_of_acquisition));
            }
            if ((check_num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((int)(check_num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((mbe_home_base_business.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(mbe_home_base_business.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((mbe_8a_cert_num == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(mbe_8a_cert_num));
            }
            if ((sinking_fund_num.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(sinking_fund_num.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((mbe_email_subscription.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(mbe_email_subscription.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((iso9001_cert.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(iso9001_cert.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((council == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(council));
            }
            if ((local_regional_council == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(local_regional_council));
            }
            if ((iso9002_cert.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(iso9002_cert.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((contract_termination_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(contract_termination_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((mbe_employer_SSN == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(mbe_employer_SSN));
            }
            if ((minority_memo == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(minority_memo));
            }
            if ((date_acquisition.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(date_acquisition.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((mbe_additional_facility == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(mbe_additional_facility));
            }
            if ((minority_class == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(minority_class));
            }
            if ((mbe_cert_expiration_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((System.DateTime)(mbe_cert_expiration_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((mbe_MBEIC_inv.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((bool)(mbe_MBEIC_inv.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((mbe_other_contact_email == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(mbe_other_contact_email));
            }
            if ((otherNMSDCCert.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(otherNMSDCCert.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((otherNMSDCCertCouncil == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(otherNMSDCCertCouncil));
            }
            if ((otherNMSDCCertDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.DateTime)(otherNMSDCCertDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((denyCert.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(denyCert.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((denyCertCouncil == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(denyCertCouncil));
            }
            if ((denyCertDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((System.DateTime)(denyCertDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((govtClear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((bool)(govtClear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((clearLevel == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(clearLevel));
            }
            if ((unionAffiliation == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(unionAffiliation));
            }
            if ((bonding.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((bool)(bonding.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((bondingAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((decimal)(bondingAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((bondingCompany == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(bondingCompany));
            }
            if ((sharedResources.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((bool)(sharedResources.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((sharedResourcesDesc == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(sharedResourcesDesc));
            }
            if ((otherCompany.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((bool)(otherCompany.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((otherCompanyDesc == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(otherCompanyDesc));
            }
            if ((premisesStatus == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(premisesStatus));
            }
            if ((otherAgreements.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((bool)(otherAgreements.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((pending_lawsuit_details == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(pending_lawsuit_details));
            }
            if ((bankruptcyDetails == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(bankruptcyDetails));
            }
            if ((history == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(history));
            }
            if ((marketingChannel == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(marketingChannel));
            }
            if ((avgDollarValueInv.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((decimal)(avgDollarValueInv.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((corporatePlus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((bool)(corporatePlus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((pword == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(pword));
            }
            if ((lastDeterminationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((System.DateTime)(lastDeterminationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((corpPlusSponsor == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(corpPlusSponsor));
            }
            if ((customerNatContracts == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(customerNatContracts));
            }
            if ((phoneExtension.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((int)(phoneExtension.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((remarks == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(remarks));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int assc_ID, 
                    string mbe_cert_num, 
                    string council_ID_num, 
                    string mbe_business_type, 
                    string mbe_business_product_service, 
                    string mbe_other_cert, 
                    string mbe_federal_IRS_num, 
                    global::System.Nullable<global::System.DateTime> mbe_business_establish_date, 
                    global::System.Nullable<global::System.DateTime> mbe_date_certified, 
                    global::System.Nullable<bool> iso9000_cert, 
                    string mbe_parent_company, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date1, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date2, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date3, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date4, 
                    global::System.Nullable<int> mbe_minority_emp_count, 
                    global::System.Nullable<decimal> mbe_gross_annual_sale, 
                    string mbe_geographical_mrkt, 
                    global::System.Nullable<bool> mbe_HUB_zone, 
                    string RMSDC_code, 
                    string mbe_legal_structure, 
                    string mbe_owner_salutation, 
                    string major_customer, 
                    string mbe_owner_title, 
                    string owner_Lname, 
                    string owner_Fname, 
                    string mbe_other_contact_name, 
                    string mbe_other_contact_title, 
                    global::System.Nullable<bool> mbe_8a_cert, 
                    global::System.Nullable<int> mbe_employee_count, 
                    string subsidiary, 
                    global::System.Nullable<bool> ownership_change, 
                    global::System.Nullable<int> full_time_emp_count, 
                    global::System.Nullable<bool> pending_lawsuit, 
                    global::System.Nullable<bool> cert_rejection_test, 
                    global::System.Nullable<bool> bankruptcy, 
                    global::System.Nullable<bool> subsidiary_test, 
                    string member_history, 
                    string mbe_DB_num, 
                    global::System.Nullable<int> part_time_emp_count, 
                    string cert_rejection_reason, 
                    string method_of_acquisition, 
                    global::System.Nullable<int> check_num, 
                    global::System.Nullable<bool> mbe_home_base_business, 
                    string mbe_8a_cert_num, 
                    global::System.Nullable<int> sinking_fund_num, 
                    global::System.Nullable<bool> mbe_email_subscription, 
                    global::System.Nullable<bool> iso9001_cert, 
                    string council, 
                    string local_regional_council, 
                    global::System.Nullable<bool> iso9002_cert, 
                    global::System.Nullable<global::System.DateTime> contract_termination_date, 
                    string mbe_employer_SSN, 
                    string minority_memo, 
                    global::System.Nullable<global::System.DateTime> date_acquisition, 
                    string mbe_additional_facility, 
                    string minority_class, 
                    global::System.Nullable<global::System.DateTime> mbe_cert_expiration_date, 
                    global::System.Nullable<bool> mbe_MBEIC_inv, 
                    string mbe_other_contact_email, 
                    global::System.Nullable<bool> otherNMSDCCert, 
                    string otherNMSDCCertCouncil, 
                    global::System.Nullable<global::System.DateTime> otherNMSDCCertDate, 
                    global::System.Nullable<bool> denyCert, 
                    string denyCertCouncil, 
                    global::System.Nullable<global::System.DateTime> denyCertDate, 
                    global::System.Nullable<bool> govtClear, 
                    string clearLevel, 
                    string unionAffiliation, 
                    global::System.Nullable<bool> bonding, 
                    global::System.Nullable<decimal> bondingAmount, 
                    string bondingCompany, 
                    global::System.Nullable<bool> sharedResources, 
                    string sharedResourcesDesc, 
                    global::System.Nullable<bool> otherCompany, 
                    string otherCompanyDesc, 
                    string premisesStatus, 
                    global::System.Nullable<bool> otherAgreements, 
                    string pending_lawsuit_details, 
                    string bankruptcyDetails, 
                    string history, 
                    string marketingChannel, 
                    global::System.Nullable<decimal> avgDollarValueInv, 
                    global::System.Nullable<bool> corporatePlus, 
                    string pword, 
                    global::System.Nullable<global::System.DateTime> lastDeterminationDate, 
                    string corpPlusSponsor, 
                    string customerNatContracts, 
                    global::System.Nullable<int> phoneExtension, 
                    string remarks, 
                    int Original_assc_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(assc_ID));
            if ((mbe_cert_num == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(mbe_cert_num));
            }
            if ((council_ID_num == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(council_ID_num));
            }
            if ((mbe_business_type == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(mbe_business_type));
            }
            if ((mbe_business_product_service == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(mbe_business_product_service));
            }
            if ((mbe_other_cert == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(mbe_other_cert));
            }
            if ((mbe_federal_IRS_num == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(mbe_federal_IRS_num));
            }
            if ((mbe_business_establish_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(mbe_business_establish_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((mbe_date_certified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(mbe_date_certified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((iso9000_cert.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(iso9000_cert.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((mbe_parent_company == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(mbe_parent_company));
            }
            if ((mbe_recert_date1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(mbe_recert_date1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((mbe_recert_date2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(mbe_recert_date2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((mbe_recert_date3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(mbe_recert_date3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((mbe_recert_date4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(mbe_recert_date4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((mbe_minority_emp_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(mbe_minority_emp_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((mbe_gross_annual_sale.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(mbe_gross_annual_sale.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((mbe_geographical_mrkt == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(mbe_geographical_mrkt));
            }
            if ((mbe_HUB_zone.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(mbe_HUB_zone.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RMSDC_code == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(RMSDC_code));
            }
            if ((mbe_legal_structure == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(mbe_legal_structure));
            }
            if ((mbe_owner_salutation == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(mbe_owner_salutation));
            }
            if ((major_customer == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(major_customer));
            }
            if ((mbe_owner_title == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(mbe_owner_title));
            }
            if ((owner_Lname == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(owner_Lname));
            }
            if ((owner_Fname == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(owner_Fname));
            }
            if ((mbe_other_contact_name == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(mbe_other_contact_name));
            }
            if ((mbe_other_contact_title == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(mbe_other_contact_title));
            }
            if ((mbe_8a_cert.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(mbe_8a_cert.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((mbe_employee_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(mbe_employee_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((subsidiary == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(subsidiary));
            }
            if ((ownership_change.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(ownership_change.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((full_time_emp_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(full_time_emp_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((pending_lawsuit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(pending_lawsuit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((cert_rejection_test.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(cert_rejection_test.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((bankruptcy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(bankruptcy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((subsidiary_test.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(subsidiary_test.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((member_history == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(member_history));
            }
            if ((mbe_DB_num == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(mbe_DB_num));
            }
            if ((part_time_emp_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(part_time_emp_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((cert_rejection_reason == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(cert_rejection_reason));
            }
            if ((method_of_acquisition == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(method_of_acquisition));
            }
            if ((check_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(check_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((mbe_home_base_business.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(mbe_home_base_business.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((mbe_8a_cert_num == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(mbe_8a_cert_num));
            }
            if ((sinking_fund_num.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(sinking_fund_num.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((mbe_email_subscription.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(mbe_email_subscription.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((iso9001_cert.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(iso9001_cert.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((council == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(council));
            }
            if ((local_regional_council == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(local_regional_council));
            }
            if ((iso9002_cert.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(iso9002_cert.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((contract_termination_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(contract_termination_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((mbe_employer_SSN == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(mbe_employer_SSN));
            }
            if ((minority_memo == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(minority_memo));
            }
            if ((date_acquisition.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(date_acquisition.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((mbe_additional_facility == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(mbe_additional_facility));
            }
            if ((minority_class == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(minority_class));
            }
            if ((mbe_cert_expiration_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(mbe_cert_expiration_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((mbe_MBEIC_inv.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(mbe_MBEIC_inv.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((mbe_other_contact_email == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(mbe_other_contact_email));
            }
            if ((otherNMSDCCert.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(otherNMSDCCert.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((otherNMSDCCertCouncil == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(otherNMSDCCertCouncil));
            }
            if ((otherNMSDCCertDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(otherNMSDCCertDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((denyCert.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(denyCert.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((denyCertCouncil == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(denyCertCouncil));
            }
            if ((denyCertDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((System.DateTime)(denyCertDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((govtClear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(govtClear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((clearLevel == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(clearLevel));
            }
            if ((unionAffiliation == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(unionAffiliation));
            }
            if ((bonding.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(bonding.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((bondingAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(bondingAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((bondingCompany == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(bondingCompany));
            }
            if ((sharedResources.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(sharedResources.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((sharedResourcesDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(sharedResourcesDesc));
            }
            if ((otherCompany.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(otherCompany.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((otherCompanyDesc == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(otherCompanyDesc));
            }
            if ((premisesStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(premisesStatus));
            }
            if ((otherAgreements.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(otherAgreements.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((pending_lawsuit_details == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(pending_lawsuit_details));
            }
            if ((bankruptcyDetails == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(bankruptcyDetails));
            }
            if ((history == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(history));
            }
            if ((marketingChannel == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(marketingChannel));
            }
            if ((avgDollarValueInv.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(avgDollarValueInv.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((corporatePlus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(corporatePlus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((pword == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(pword));
            }
            if ((lastDeterminationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(lastDeterminationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((corpPlusSponsor == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(corpPlusSponsor));
            }
            if ((customerNatContracts == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(customerNatContracts));
            }
            if ((phoneExtension.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(phoneExtension.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((remarks == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(remarks));
            }
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_assc_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string mbe_cert_num, 
                    string council_ID_num, 
                    string mbe_business_type, 
                    string mbe_business_product_service, 
                    string mbe_other_cert, 
                    string mbe_federal_IRS_num, 
                    global::System.Nullable<global::System.DateTime> mbe_business_establish_date, 
                    global::System.Nullable<global::System.DateTime> mbe_date_certified, 
                    global::System.Nullable<bool> iso9000_cert, 
                    string mbe_parent_company, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date1, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date2, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date3, 
                    global::System.Nullable<global::System.DateTime> mbe_recert_date4, 
                    global::System.Nullable<int> mbe_minority_emp_count, 
                    global::System.Nullable<decimal> mbe_gross_annual_sale, 
                    string mbe_geographical_mrkt, 
                    global::System.Nullable<bool> mbe_HUB_zone, 
                    string RMSDC_code, 
                    string mbe_legal_structure, 
                    string mbe_owner_salutation, 
                    string major_customer, 
                    string mbe_owner_title, 
                    string owner_Lname, 
                    string owner_Fname, 
                    string mbe_other_contact_name, 
                    string mbe_other_contact_title, 
                    global::System.Nullable<bool> mbe_8a_cert, 
                    global::System.Nullable<int> mbe_employee_count, 
                    string subsidiary, 
                    global::System.Nullable<bool> ownership_change, 
                    global::System.Nullable<int> full_time_emp_count, 
                    global::System.Nullable<bool> pending_lawsuit, 
                    global::System.Nullable<bool> cert_rejection_test, 
                    global::System.Nullable<bool> bankruptcy, 
                    global::System.Nullable<bool> subsidiary_test, 
                    string member_history, 
                    string mbe_DB_num, 
                    global::System.Nullable<int> part_time_emp_count, 
                    string cert_rejection_reason, 
                    string method_of_acquisition, 
                    global::System.Nullable<int> check_num, 
                    global::System.Nullable<bool> mbe_home_base_business, 
                    string mbe_8a_cert_num, 
                    global::System.Nullable<int> sinking_fund_num, 
                    global::System.Nullable<bool> mbe_email_subscription, 
                    global::System.Nullable<bool> iso9001_cert, 
                    string council, 
                    string local_regional_council, 
                    global::System.Nullable<bool> iso9002_cert, 
                    global::System.Nullable<global::System.DateTime> contract_termination_date, 
                    string mbe_employer_SSN, 
                    string minority_memo, 
                    global::System.Nullable<global::System.DateTime> date_acquisition, 
                    string mbe_additional_facility, 
                    string minority_class, 
                    global::System.Nullable<global::System.DateTime> mbe_cert_expiration_date, 
                    global::System.Nullable<bool> mbe_MBEIC_inv, 
                    string mbe_other_contact_email, 
                    global::System.Nullable<bool> otherNMSDCCert, 
                    string otherNMSDCCertCouncil, 
                    global::System.Nullable<global::System.DateTime> otherNMSDCCertDate, 
                    global::System.Nullable<bool> denyCert, 
                    string denyCertCouncil, 
                    global::System.Nullable<global::System.DateTime> denyCertDate, 
                    global::System.Nullable<bool> govtClear, 
                    string clearLevel, 
                    string unionAffiliation, 
                    global::System.Nullable<bool> bonding, 
                    global::System.Nullable<decimal> bondingAmount, 
                    string bondingCompany, 
                    global::System.Nullable<bool> sharedResources, 
                    string sharedResourcesDesc, 
                    global::System.Nullable<bool> otherCompany, 
                    string otherCompanyDesc, 
                    string premisesStatus, 
                    global::System.Nullable<bool> otherAgreements, 
                    string pending_lawsuit_details, 
                    string bankruptcyDetails, 
                    string history, 
                    string marketingChannel, 
                    global::System.Nullable<decimal> avgDollarValueInv, 
                    global::System.Nullable<bool> corporatePlus, 
                    string pword, 
                    global::System.Nullable<global::System.DateTime> lastDeterminationDate, 
                    string corpPlusSponsor, 
                    string customerNatContracts, 
                    global::System.Nullable<int> phoneExtension, 
                    string remarks, 
                    int Original_assc_ID) {
            return this.Update(Original_assc_ID, mbe_cert_num, council_ID_num, mbe_business_type, mbe_business_product_service, mbe_other_cert, mbe_federal_IRS_num, mbe_business_establish_date, mbe_date_certified, iso9000_cert, mbe_parent_company, mbe_recert_date1, mbe_recert_date2, mbe_recert_date3, mbe_recert_date4, mbe_minority_emp_count, mbe_gross_annual_sale, mbe_geographical_mrkt, mbe_HUB_zone, RMSDC_code, mbe_legal_structure, mbe_owner_salutation, major_customer, mbe_owner_title, owner_Lname, owner_Fname, mbe_other_contact_name, mbe_other_contact_title, mbe_8a_cert, mbe_employee_count, subsidiary, ownership_change, full_time_emp_count, pending_lawsuit, cert_rejection_test, bankruptcy, subsidiary_test, member_history, mbe_DB_num, part_time_emp_count, cert_rejection_reason, method_of_acquisition, check_num, mbe_home_base_business, mbe_8a_cert_num, sinking_fund_num, mbe_email_subscription, iso9001_cert, council, local_regional_council, iso9002_cert, contract_termination_date, mbe_employer_SSN, minority_memo, date_acquisition, mbe_additional_facility, minority_class, mbe_cert_expiration_date, mbe_MBEIC_inv, mbe_other_contact_email, otherNMSDCCert, otherNMSDCCertCouncil, otherNMSDCCertDate, denyCert, denyCertCouncil, denyCertDate, govtClear, clearLevel, unionAffiliation, bonding, bondingAmount, bondingCompany, sharedResources, sharedResourcesDesc, otherCompany, otherCompanyDesc, premisesStatus, otherAgreements, pending_lawsuit_details, bankruptcyDetails, history, marketingChannel, avgDollarValueInv, corporatePlus, pword, lastDeterminationDate, corpPlusSponsor, customerNatContracts, phoneExtension, remarks, Original_assc_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MBE_GROSS_ANNUAL_SALETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MBE_GROSS_ANNUAL_SALETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MBE_GROSS_ANNUAL_SALE";
            tableMapping.ColumnMappings.Add("assc_ID", "assc_ID");
            tableMapping.ColumnMappings.Add("gross_annual_sale_date", "gross_annual_sale_date");
            tableMapping.ColumnMappings.Add("gross_annual_sale", "gross_annual_sale");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[MBE_GROSS_ANNUAL_SALE] WHERE (([assc_ID] = @Original_assc_ID) " +
                "AND ([gross_annual_sale_date] = @Original_gross_annual_sale_date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gross_annual_sale_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gross_annual_sale_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[MBE_GROSS_ANNUAL_SALE] ([assc_ID], [gross_annual_sale_date], [" +
                "gross_annual_sale]) VALUES (@assc_ID, @gross_annual_sale_date, @gross_annual_sal" +
                "e)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gross_annual_sale_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gross_annual_sale_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gross_annual_sale", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gross_annual_sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MBE_GROSS_ANNUAL_SALE] SET [assc_ID] = @assc_ID, [gross_annual_sale_date] = @gross_annual_sale_date, [gross_annual_sale] = @gross_annual_sale WHERE (([assc_ID] = @Original_assc_ID) AND ([gross_annual_sale_date] = @Original_gross_annual_sale_date))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gross_annual_sale_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gross_annual_sale_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gross_annual_sale", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gross_annual_sale", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_assc_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "assc_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gross_annual_sale_date", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gross_annual_sale_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["scmbdcConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT assc_ID, gross_annual_sale_date, gross_annual_sale FROM dbo.MBE_GROSS_ANNU" +
                "AL_SALE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScmbdcDataSet.MBE_GROSS_ANNUAL_SALEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScmbdcDataSet.MBE_GROSS_ANNUAL_SALEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScmbdcDataSet.MBE_GROSS_ANNUAL_SALEDataTable dataTable = new ScmbdcDataSet.MBE_GROSS_ANNUAL_SALEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet.MBE_GROSS_ANNUAL_SALEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MBE_GROSS_ANNUAL_SALE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_assc_ID, System.DateTime Original_gross_annual_sale_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_assc_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_gross_annual_sale_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int assc_ID, System.DateTime gross_annual_sale_date, global::System.Nullable<decimal> gross_annual_sale) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(assc_ID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(gross_annual_sale_date));
            if ((gross_annual_sale.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(gross_annual_sale.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int assc_ID, System.DateTime gross_annual_sale_date, global::System.Nullable<decimal> gross_annual_sale, int Original_assc_ID, System.DateTime Original_gross_annual_sale_date) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(assc_ID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(gross_annual_sale_date));
            if ((gross_annual_sale.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(gross_annual_sale.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_assc_ID));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_gross_annual_sale_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> gross_annual_sale, int Original_assc_ID, System.DateTime Original_gross_annual_sale_date) {
            return this.Update(Original_assc_ID, Original_gross_annual_sale_date, gross_annual_sale, Original_assc_ID, Original_gross_annual_sale_date);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STATE_LISTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STATE_LISTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STATE_LIST";
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Name", "Name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[STATE_LIST] WHERE (([Code] = @Original_Code) AND ([Name] = @Or" +
                "iginal_Name))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[STATE_LIST] ([Code], [Name]) VALUES (@Code, @Name);\r\nSELECT Co" +
                "de, Name FROM STATE_LIST WHERE (Code = @Code)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[STATE_LIST] SET [Code] = @Code, [Name] = @Name WHERE (([Code] = @Or" +
                "iginal_Code) AND ([Name] = @Original_Name));\r\nSELECT Code, Name FROM STATE_LIST " +
                "WHERE (Code = @Code)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Durados.Web.Mvc.Specifics.Properties.Settings.Default.scmbdcConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Code, Name FROM dbo.STATE_LIST";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ScmbdcDataSet.STATE_LISTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ScmbdcDataSet.STATE_LISTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ScmbdcDataSet.STATE_LISTDataTable dataTable = new ScmbdcDataSet.STATE_LISTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet.STATE_LISTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ScmbdcDataSet dataSet) {
            return this.Adapter.Update(dataSet, "STATE_LIST");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Code, string Original_Name) {
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Code));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Code, string Name) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Code));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Code, string Name, string Original_Code, string Original_Name) {
            if ((Code == null)) {
                throw new global::System.ArgumentNullException("Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Code));
            }
            if ((Name == null)) {
                throw new global::System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Original_Code == null)) {
                throw new global::System.ArgumentNullException("Original_Code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Code));
            }
            if ((Original_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Name, string Original_Code, string Original_Name) {
            return this.Update(Original_Code, Name, Original_Code, Original_Name);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ASSOCIATETableAdapter _aSSOCIATETableAdapter;
        
        private MBETableAdapter _mBETableAdapter;
        
        private MBE_GROSS_ANNUAL_SALETableAdapter _mBE_GROSS_ANNUAL_SALETableAdapter;
        
        private STATE_LISTTableAdapter _sTATE_LISTTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ASSOCIATETableAdapter ASSOCIATETableAdapter {
            get {
                return this._aSSOCIATETableAdapter;
            }
            set {
                this._aSSOCIATETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MBETableAdapter MBETableAdapter {
            get {
                return this._mBETableAdapter;
            }
            set {
                this._mBETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MBE_GROSS_ANNUAL_SALETableAdapter MBE_GROSS_ANNUAL_SALETableAdapter {
            get {
                return this._mBE_GROSS_ANNUAL_SALETableAdapter;
            }
            set {
                this._mBE_GROSS_ANNUAL_SALETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public STATE_LISTTableAdapter STATE_LISTTableAdapter {
            get {
                return this._sTATE_LISTTableAdapter;
            }
            set {
                this._sTATE_LISTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aSSOCIATETableAdapter != null) 
                            && (this._aSSOCIATETableAdapter.Connection != null))) {
                    return this._aSSOCIATETableAdapter.Connection;
                }
                if (((this._mBETableAdapter != null) 
                            && (this._mBETableAdapter.Connection != null))) {
                    return this._mBETableAdapter.Connection;
                }
                if (((this._mBE_GROSS_ANNUAL_SALETableAdapter != null) 
                            && (this._mBE_GROSS_ANNUAL_SALETableAdapter.Connection != null))) {
                    return this._mBE_GROSS_ANNUAL_SALETableAdapter.Connection;
                }
                if (((this._sTATE_LISTTableAdapter != null) 
                            && (this._sTATE_LISTTableAdapter.Connection != null))) {
                    return this._sTATE_LISTTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aSSOCIATETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mBETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mBE_GROSS_ANNUAL_SALETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sTATE_LISTTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(ScmbdcDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sTATE_LISTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.STATE_LIST.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sTATE_LISTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aSSOCIATETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ASSOCIATE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aSSOCIATETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mBETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MBE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mBETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mBE_GROSS_ANNUAL_SALETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MBE_GROSS_ANNUAL_SALE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mBE_GROSS_ANNUAL_SALETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(ScmbdcDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sTATE_LISTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.STATE_LIST.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sTATE_LISTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aSSOCIATETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ASSOCIATE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aSSOCIATETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mBETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MBE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mBETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mBE_GROSS_ANNUAL_SALETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MBE_GROSS_ANNUAL_SALE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mBE_GROSS_ANNUAL_SALETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(ScmbdcDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mBE_GROSS_ANNUAL_SALETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MBE_GROSS_ANNUAL_SALE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mBE_GROSS_ANNUAL_SALETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mBETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MBE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mBETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aSSOCIATETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ASSOCIATE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aSSOCIATETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sTATE_LISTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.STATE_LIST.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sTATE_LISTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(ScmbdcDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aSSOCIATETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aSSOCIATETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mBETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mBETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mBE_GROSS_ANNUAL_SALETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mBE_GROSS_ANNUAL_SALETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._sTATE_LISTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sTATE_LISTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aSSOCIATETableAdapter != null)) {
                    revertConnections.Add(this._aSSOCIATETableAdapter, this._aSSOCIATETableAdapter.Connection);
                    this._aSSOCIATETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aSSOCIATETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aSSOCIATETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aSSOCIATETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aSSOCIATETableAdapter.Adapter);
                    }
                }
                if ((this._mBETableAdapter != null)) {
                    revertConnections.Add(this._mBETableAdapter, this._mBETableAdapter.Connection);
                    this._mBETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mBETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mBETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mBETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mBETableAdapter.Adapter);
                    }
                }
                if ((this._mBE_GROSS_ANNUAL_SALETableAdapter != null)) {
                    revertConnections.Add(this._mBE_GROSS_ANNUAL_SALETableAdapter, this._mBE_GROSS_ANNUAL_SALETableAdapter.Connection);
                    this._mBE_GROSS_ANNUAL_SALETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mBE_GROSS_ANNUAL_SALETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mBE_GROSS_ANNUAL_SALETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mBE_GROSS_ANNUAL_SALETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mBE_GROSS_ANNUAL_SALETableAdapter.Adapter);
                    }
                }
                if ((this._sTATE_LISTTableAdapter != null)) {
                    revertConnections.Add(this._sTATE_LISTTableAdapter, this._sTATE_LISTTableAdapter.Connection);
                    this._sTATE_LISTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sTATE_LISTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sTATE_LISTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sTATE_LISTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sTATE_LISTTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aSSOCIATETableAdapter != null)) {
                    this._aSSOCIATETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aSSOCIATETableAdapter]));
                    this._aSSOCIATETableAdapter.Transaction = null;
                }
                if ((this._mBETableAdapter != null)) {
                    this._mBETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mBETableAdapter]));
                    this._mBETableAdapter.Transaction = null;
                }
                if ((this._mBE_GROSS_ANNUAL_SALETableAdapter != null)) {
                    this._mBE_GROSS_ANNUAL_SALETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mBE_GROSS_ANNUAL_SALETableAdapter]));
                    this._mBE_GROSS_ANNUAL_SALETableAdapter.Transaction = null;
                }
                if ((this._sTATE_LISTTableAdapter != null)) {
                    this._sTATE_LISTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sTATE_LISTTableAdapter]));
                    this._sTATE_LISTTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591